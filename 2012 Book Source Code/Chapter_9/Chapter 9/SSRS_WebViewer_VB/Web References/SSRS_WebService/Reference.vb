'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.237
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.237.
'
Namespace SSRS_WebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ReportingService2010Soap", [Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ExpirationDefinition)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RecurrencePattern)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ScheduleDefinitionOrReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DataSourceDefinitionOrReference))>  _
    Partial Public Class ReportingService2010
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private trustedUserHeaderValueField As TrustedUserHeader
        
        Private serverInfoHeaderValueField As ServerInfoHeader
        
        Private CreateCatalogItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MoveItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InheritParentSecurityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListItemHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListChildrenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListDependentItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListParentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private itemNamespaceHeaderValueField As ItemNamespaceHeader
        
        Private GetPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemReferencesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemReferencesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListItemTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSubscriptionPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubscriptionPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDataDrivenSubscriptionPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataDrivenSubscriptionPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSubscriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateSubscriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateDataDrivenSubscriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExtensionSettingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateExtensionSettingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListSubscriptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListMySubscriptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListSubscriptionsUsingDataSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeSubscriptionOwnerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateDataSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrepareQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EnableDataSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisableDataSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDataSourceContentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDataSourceContentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListDatabaseCredentialRetrievalOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemDataSourcesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemDataSourcesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestConnectForDataSourceDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestConnectForItemDataSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRolePropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRolePropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteRoleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListRolesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListTasksOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemDataSourcePromptsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateModelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetModelItemPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetModelItemPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetModelItemPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserModelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InheritModelItemParentSecurityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetModelDrillthroughReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListModelDrillthroughReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListModelItemChildrenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListModelItemTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListModelPerspectivesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegenerateModelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveAllModelItemPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListSchedulesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSchedulePropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListScheduleStatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PauseScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResumeScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSchedulePropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListScheduledItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListParameterTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListParameterStatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateReportEditSessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateLinkedItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemLinkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListExecutionSettingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetExecutionOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExecutionOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateItemExecutionSnapshotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetCacheOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCacheOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FlushCacheOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateItemHistorySnapshotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteItemHistorySnapshotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemHistoryLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemHistoryLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetItemHistoryOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemHistoryOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportServerConfigInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsSSLRequiredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSystemPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSystemPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListExtensionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListExtensionTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEventsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FireEventOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListJobTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListJobActionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListJobStatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateCacheRefreshPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetCacheRefreshPlanPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCacheRefreshPlanPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteCacheRefreshPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListCacheRefreshPlansOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogonUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogoffOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSystemPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListSecurityScopesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SSRS_WebViewer_VB.My.MySettings.Default.SSRS_WebViewer_VB_SSRS_WebService_ReportingService2010
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property TrustedUserHeaderValue() As TrustedUserHeader
            Get
                Return Me.trustedUserHeaderValueField
            End Get
            Set
                Me.trustedUserHeaderValueField = value
            End Set
        End Property
        
        Public Property ServerInfoHeaderValue() As ServerInfoHeader
            Get
                Return Me.serverInfoHeaderValueField
            End Get
            Set
                Me.serverInfoHeaderValueField = value
            End Set
        End Property
        
        Public Property ItemNamespaceHeaderValue() As ItemNamespaceHeader
            Get
                Return Me.itemNamespaceHeaderValueField
            End Get
            Set
                Me.itemNamespaceHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateCatalogItemCompleted As CreateCatalogItemCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemDefinitionCompleted As SetItemDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemDefinitionCompleted As GetItemDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemTypeCompleted As GetItemTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteItemCompleted As DeleteItemCompletedEventHandler
        
        '''<remarks/>
        Public Event MoveItemCompleted As MoveItemCompletedEventHandler
        
        '''<remarks/>
        Public Event InheritParentSecurityCompleted As InheritParentSecurityCompletedEventHandler
        
        '''<remarks/>
        Public Event ListItemHistoryCompleted As ListItemHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event ListChildrenCompleted As ListChildrenCompletedEventHandler
        
        '''<remarks/>
        Public Event ListDependentItemsCompleted As ListDependentItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindItemsCompleted As FindItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListParentsCompleted As ListParentsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateFolderCompleted As CreateFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPropertiesCompleted As SetPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPropertiesCompleted As GetPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemReferencesCompleted As SetItemReferencesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemReferencesCompleted As GetItemReferencesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListItemTypesCompleted As ListItemTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSubscriptionPropertiesCompleted As SetSubscriptionPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubscriptionPropertiesCompleted As GetSubscriptionPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDataDrivenSubscriptionPropertiesCompleted As SetDataDrivenSubscriptionPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataDrivenSubscriptionPropertiesCompleted As GetDataDrivenSubscriptionPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSubscriptionCompleted As DeleteSubscriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateSubscriptionCompleted As CreateSubscriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateDataDrivenSubscriptionCompleted As CreateDataDrivenSubscriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExtensionSettingsCompleted As GetExtensionSettingsCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateExtensionSettingsCompleted As ValidateExtensionSettingsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListSubscriptionsCompleted As ListSubscriptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListMySubscriptionsCompleted As ListMySubscriptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListSubscriptionsUsingDataSourceCompleted As ListSubscriptionsUsingDataSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeSubscriptionOwnerCompleted As ChangeSubscriptionOwnerCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateDataSourceCompleted As CreateDataSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event PrepareQueryCompleted As PrepareQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event EnableDataSourceCompleted As EnableDataSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event DisableDataSourceCompleted As DisableDataSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDataSourceContentsCompleted As SetDataSourceContentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDataSourceContentsCompleted As GetDataSourceContentsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListDatabaseCredentialRetrievalOptionsCompleted As ListDatabaseCredentialRetrievalOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemDataSourcesCompleted As SetItemDataSourcesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemDataSourcesCompleted As GetItemDataSourcesCompletedEventHandler
        
        '''<remarks/>
        Public Event TestConnectForDataSourceDefinitionCompleted As TestConnectForDataSourceDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event TestConnectForItemDataSourceCompleted As TestConnectForItemDataSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRoleCompleted As CreateRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRolePropertiesCompleted As SetRolePropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRolePropertiesCompleted As GetRolePropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteRoleCompleted As DeleteRoleCompletedEventHandler
        
        '''<remarks/>
        Public Event ListRolesCompleted As ListRolesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListTasksCompleted As ListTasksCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPoliciesCompleted As SetPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPoliciesCompleted As GetPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemDataSourcePromptsCompleted As GetItemDataSourcePromptsCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateModelCompleted As GenerateModelCompletedEventHandler
        
        '''<remarks/>
        Public Event GetModelItemPermissionsCompleted As GetModelItemPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetModelItemPoliciesCompleted As SetModelItemPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetModelItemPoliciesCompleted As GetModelItemPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserModelCompleted As GetUserModelCompletedEventHandler
        
        '''<remarks/>
        Public Event InheritModelItemParentSecurityCompleted As InheritModelItemParentSecurityCompletedEventHandler
        
        '''<remarks/>
        Public Event SetModelDrillthroughReportsCompleted As SetModelDrillthroughReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListModelDrillthroughReportsCompleted As ListModelDrillthroughReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListModelItemChildrenCompleted As ListModelItemChildrenCompletedEventHandler
        
        '''<remarks/>
        Public Event ListModelItemTypesCompleted As ListModelItemTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListModelPerspectivesCompleted As ListModelPerspectivesCompletedEventHandler
        
        '''<remarks/>
        Public Event RegenerateModelCompleted As RegenerateModelCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveAllModelItemPoliciesCompleted As RemoveAllModelItemPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateScheduleCompleted As CreateScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteScheduleCompleted As DeleteScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event ListSchedulesCompleted As ListSchedulesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSchedulePropertiesCompleted As GetSchedulePropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListScheduleStatesCompleted As ListScheduleStatesCompletedEventHandler
        
        '''<remarks/>
        Public Event PauseScheduleCompleted As PauseScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event ResumeScheduleCompleted As ResumeScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSchedulePropertiesCompleted As SetSchedulePropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListScheduledItemsCompleted As ListScheduledItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemParametersCompleted As SetItemParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemParametersCompleted As GetItemParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event ListParameterTypesCompleted As ListParameterTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListParameterStatesCompleted As ListParameterStatesCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateReportEditSessionCompleted As CreateReportEditSessionCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateLinkedItemCompleted As CreateLinkedItemCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemLinkCompleted As SetItemLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemLinkCompleted As GetItemLinkCompletedEventHandler
        
        '''<remarks/>
        Public Event ListExecutionSettingsCompleted As ListExecutionSettingsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetExecutionOptionsCompleted As SetExecutionOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExecutionOptionsCompleted As GetExecutionOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateItemExecutionSnapshotCompleted As UpdateItemExecutionSnapshotCompletedEventHandler
        
        '''<remarks/>
        Public Event SetCacheOptionsCompleted As SetCacheOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCacheOptionsCompleted As GetCacheOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event FlushCacheCompleted As FlushCacheCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateItemHistorySnapshotCompleted As CreateItemHistorySnapshotCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteItemHistorySnapshotCompleted As DeleteItemHistorySnapshotCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemHistoryLimitCompleted As SetItemHistoryLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemHistoryLimitCompleted As GetItemHistoryLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event SetItemHistoryOptionsCompleted As SetItemHistoryOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemHistoryOptionsCompleted As GetItemHistoryOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportServerConfigInfoCompleted As GetReportServerConfigInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event IsSSLRequiredCompleted As IsSSLRequiredCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSystemPropertiesCompleted As SetSystemPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemPropertiesCompleted As GetSystemPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSystemPoliciesCompleted As SetSystemPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemPoliciesCompleted As GetSystemPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListExtensionsCompleted As ListExtensionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListExtensionTypesCompleted As ListExtensionTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEventsCompleted As ListEventsCompletedEventHandler
        
        '''<remarks/>
        Public Event FireEventCompleted As FireEventCompletedEventHandler
        
        '''<remarks/>
        Public Event ListJobsCompleted As ListJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListJobTypesCompleted As ListJobTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event ListJobActionsCompleted As ListJobActionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListJobStatesCompleted As ListJobStatesCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelJobCompleted As CancelJobCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCacheRefreshPlanCompleted As CreateCacheRefreshPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event SetCacheRefreshPlanPropertiesCompleted As SetCacheRefreshPlanPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCacheRefreshPlanPropertiesCompleted As GetCacheRefreshPlanPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteCacheRefreshPlanCompleted As DeleteCacheRefreshPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event ListCacheRefreshPlansCompleted As ListCacheRefreshPlansCompletedEventHandler
        
        '''<remarks/>
        Public Event LogonUserCompleted As LogonUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LogoffCompleted As LogoffCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPermissionsCompleted As GetPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSystemPermissionsCompleted As GetSystemPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event ListSecurityScopesCompleted As ListSecurityScopesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa"& _ 
            "talogItem", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCatalogItem(ByVal ItemType As String, ByVal Name As String, ByVal Parent As String, ByVal Overwrite As Boolean, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Definition() As Byte, ByVal Properties() As [Property], ByRef Warnings() As Warning) As <System.Xml.Serialization.XmlElementAttribute("ItemInfo")> CatalogItem
            Dim results() As Object = Me.Invoke("CreateCatalogItem", New Object() {ItemType, Name, Parent, Overwrite, Definition, Properties})
            Warnings = CType(results(1),Warning())
            Return CType(results(0),CatalogItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCatalogItemAsync(ByVal ItemType As String, ByVal Name As String, ByVal Parent As String, ByVal Overwrite As Boolean, ByVal Definition() As Byte, ByVal Properties() As [Property])
            Me.CreateCatalogItemAsync(ItemType, Name, Parent, Overwrite, Definition, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCatalogItemAsync(ByVal ItemType As String, ByVal Name As String, ByVal Parent As String, ByVal Overwrite As Boolean, ByVal Definition() As Byte, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.CreateCatalogItemOperationCompleted Is Nothing) Then
                Me.CreateCatalogItemOperationCompleted = AddressOf Me.OnCreateCatalogItemOperationCompleted
            End If
            Me.InvokeAsync("CreateCatalogItem", New Object() {ItemType, Name, Parent, Overwrite, Definition, Properties}, Me.CreateCatalogItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCatalogItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCatalogItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCatalogItemCompleted(Me, New CreateCatalogItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD"& _ 
            "efinition", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetItemDefinition(ByVal ItemPath As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Definition() As Byte, ByVal Properties() As [Property]) As <System.Xml.Serialization.XmlArrayAttribute("Warnings")> Warning()
            Dim results() As Object = Me.Invoke("SetItemDefinition", New Object() {ItemPath, Definition, Properties})
            Return CType(results(0),Warning())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetItemDefinitionAsync(ByVal ItemPath As String, ByVal Definition() As Byte, ByVal Properties() As [Property])
            Me.SetItemDefinitionAsync(ItemPath, Definition, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemDefinitionAsync(ByVal ItemPath As String, ByVal Definition() As Byte, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.SetItemDefinitionOperationCompleted Is Nothing) Then
                Me.SetItemDefinitionOperationCompleted = AddressOf Me.OnSetItemDefinitionOperationCompleted
            End If
            Me.InvokeAsync("SetItemDefinition", New Object() {ItemPath, Definition, Properties}, Me.SetItemDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemDefinitionCompleted(Me, New SetItemDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD"& _ 
            "efinition", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemDefinition(ByVal ItemPath As String) As <System.Xml.Serialization.XmlElementAttribute("Definition", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetItemDefinition", New Object() {ItemPath})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemDefinitionAsync(ByVal ItemPath As String)
            Me.GetItemDefinitionAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemDefinitionAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemDefinitionOperationCompleted Is Nothing) Then
                Me.GetItemDefinitionOperationCompleted = AddressOf Me.OnGetItemDefinitionOperationCompleted
            End If
            Me.InvokeAsync("GetItemDefinition", New Object() {ItemPath}, Me.GetItemDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemDefinitionCompleted(Me, New GetItemDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemT"& _ 
            "ype", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemType(ByVal ItemPath As String) As <System.Xml.Serialization.XmlElementAttribute("Type")> String
            Dim results() As Object = Me.Invoke("GetItemType", New Object() {ItemPath})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemTypeAsync(ByVal ItemPath As String)
            Me.GetItemTypeAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemTypeAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemTypeOperationCompleted Is Nothing) Then
                Me.GetItemTypeOperationCompleted = AddressOf Me.OnGetItemTypeOperationCompleted
            End If
            Me.InvokeAsync("GetItemType", New Object() {ItemPath}, Me.GetItemTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemTypeCompleted(Me, New GetItemTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt"& _ 
            "em", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteItem(ByVal ItemPath As String)
            Me.Invoke("DeleteItem", New Object() {ItemPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemAsync(ByVal ItemPath As String)
            Me.DeleteItemAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.DeleteItemOperationCompleted Is Nothing) Then
                Me.DeleteItemOperationCompleted = AddressOf Me.OnDeleteItemOperationCompleted
            End If
            Me.InvokeAsync("DeleteItem", New Object() {ItemPath}, Me.DeleteItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteItemCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/MoveItem"& _ 
            "", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MoveItem(ByVal ItemPath As String, ByVal Target As String)
            Me.Invoke("MoveItem", New Object() {ItemPath, Target})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveItemAsync(ByVal ItemPath As String, ByVal Target As String)
            Me.MoveItemAsync(ItemPath, Target, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveItemAsync(ByVal ItemPath As String, ByVal Target As String, ByVal userState As Object)
            If (Me.MoveItemOperationCompleted Is Nothing) Then
                Me.MoveItemOperationCompleted = AddressOf Me.OnMoveItemOperationCompleted
            End If
            Me.InvokeAsync("MoveItem", New Object() {ItemPath, Target}, Me.MoveItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnMoveItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.MoveItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MoveItemCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritP"& _ 
            "arentSecurity", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InheritParentSecurity(ByVal ItemPath As String)
            Me.Invoke("InheritParentSecurity", New Object() {ItemPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InheritParentSecurityAsync(ByVal ItemPath As String)
            Me.InheritParentSecurityAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InheritParentSecurityAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.InheritParentSecurityOperationCompleted Is Nothing) Then
                Me.InheritParentSecurityOperationCompleted = AddressOf Me.OnInheritParentSecurityOperationCompleted
            End If
            Me.InvokeAsync("InheritParentSecurity", New Object() {ItemPath}, Me.InheritParentSecurityOperationCompleted, userState)
        End Sub
        
        Private Sub OnInheritParentSecurityOperationCompleted(ByVal arg As Object)
            If (Not (Me.InheritParentSecurityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InheritParentSecurityCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem"& _ 
            "History", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListItemHistory(ByVal ItemPath As String) As <System.Xml.Serialization.XmlArrayAttribute("ItemHistory")> ItemHistorySnapshot()
            Dim results() As Object = Me.Invoke("ListItemHistory", New Object() {ItemPath})
            Return CType(results(0),ItemHistorySnapshot())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListItemHistoryAsync(ByVal ItemPath As String)
            Me.ListItemHistoryAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListItemHistoryAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.ListItemHistoryOperationCompleted Is Nothing) Then
                Me.ListItemHistoryOperationCompleted = AddressOf Me.OnListItemHistoryOperationCompleted
            End If
            Me.InvokeAsync("ListItemHistory", New Object() {ItemPath}, Me.ListItemHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnListItemHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListItemHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListItemHistoryCompleted(Me, New ListItemHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListChil"& _ 
            "dren", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListChildren(ByVal ItemPath As String, ByVal Recursive As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("CatalogItems")> CatalogItem()
            Dim results() As Object = Me.Invoke("ListChildren", New Object() {ItemPath, Recursive})
            Return CType(results(0),CatalogItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListChildrenAsync(ByVal ItemPath As String, ByVal Recursive As Boolean)
            Me.ListChildrenAsync(ItemPath, Recursive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListChildrenAsync(ByVal ItemPath As String, ByVal Recursive As Boolean, ByVal userState As Object)
            If (Me.ListChildrenOperationCompleted Is Nothing) Then
                Me.ListChildrenOperationCompleted = AddressOf Me.OnListChildrenOperationCompleted
            End If
            Me.InvokeAsync("ListChildren", New Object() {ItemPath, Recursive}, Me.ListChildrenOperationCompleted, userState)
        End Sub
        
        Private Sub OnListChildrenOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListChildrenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListChildrenCompleted(Me, New ListChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListDepe"& _ 
            "ndentItems", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListDependentItems(ByVal ItemPath As String) As <System.Xml.Serialization.XmlArrayAttribute("CatalogItems")> CatalogItem()
            Dim results() As Object = Me.Invoke("ListDependentItems", New Object() {ItemPath})
            Return CType(results(0),CatalogItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListDependentItemsAsync(ByVal ItemPath As String)
            Me.ListDependentItemsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListDependentItemsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.ListDependentItemsOperationCompleted Is Nothing) Then
                Me.ListDependentItemsOperationCompleted = AddressOf Me.OnListDependentItemsOperationCompleted
            End If
            Me.InvokeAsync("ListDependentItems", New Object() {ItemPath}, Me.ListDependentItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListDependentItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListDependentItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListDependentItemsCompleted(Me, New ListDependentItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FindItem"& _ 
            "s", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindItems(ByVal Folder As String, ByVal BooleanOperator As BooleanOperatorEnum, ByVal SearchOptions() As [Property], ByVal SearchConditions() As SearchCondition) As <System.Xml.Serialization.XmlArrayAttribute("Items")> CatalogItem()
            Dim results() As Object = Me.Invoke("FindItems", New Object() {Folder, BooleanOperator, SearchOptions, SearchConditions})
            Return CType(results(0),CatalogItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindItemsAsync(ByVal Folder As String, ByVal BooleanOperator As BooleanOperatorEnum, ByVal SearchOptions() As [Property], ByVal SearchConditions() As SearchCondition)
            Me.FindItemsAsync(Folder, BooleanOperator, SearchOptions, SearchConditions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindItemsAsync(ByVal Folder As String, ByVal BooleanOperator As BooleanOperatorEnum, ByVal SearchOptions() As [Property], ByVal SearchConditions() As SearchCondition, ByVal userState As Object)
            If (Me.FindItemsOperationCompleted Is Nothing) Then
                Me.FindItemsOperationCompleted = AddressOf Me.OnFindItemsOperationCompleted
            End If
            Me.InvokeAsync("FindItems", New Object() {Folder, BooleanOperator, SearchOptions, SearchConditions}, Me.FindItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindItemsCompleted(Me, New FindItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPare"& _ 
            "nts", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListParents(ByVal ItemPath As String) As CatalogItem()
            Dim results() As Object = Me.Invoke("ListParents", New Object() {ItemPath})
            Return CType(results(0),CatalogItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListParentsAsync(ByVal ItemPath As String)
            Me.ListParentsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListParentsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.ListParentsOperationCompleted Is Nothing) Then
                Me.ListParentsOperationCompleted = AddressOf Me.OnListParentsOperationCompleted
            End If
            Me.InvokeAsync("ListParents", New Object() {ItemPath}, Me.ListParentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListParentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListParentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListParentsCompleted(Me, New ListParentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateFo"& _ 
            "lder", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateFolder(ByVal Folder As String, ByVal Parent As String, ByVal Properties() As [Property]) As <System.Xml.Serialization.XmlElementAttribute("ItemInfo")> CatalogItem
            Dim results() As Object = Me.Invoke("CreateFolder", New Object() {Folder, Parent, Properties})
            Return CType(results(0),CatalogItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateFolderAsync(ByVal Folder As String, ByVal Parent As String, ByVal Properties() As [Property])
            Me.CreateFolderAsync(Folder, Parent, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateFolderAsync(ByVal Folder As String, ByVal Parent As String, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.CreateFolderOperationCompleted Is Nothing) Then
                Me.CreateFolderOperationCompleted = AddressOf Me.OnCreateFolderOperationCompleted
            End If
            Me.InvokeAsync("CreateFolder", New Object() {Folder, Parent, Properties}, Me.CreateFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateFolderCompleted(Me, New CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPrope"& _ 
            "rties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetProperties(ByVal ItemPath As String, ByVal Properties() As [Property])
            Me.Invoke("SetProperties", New Object() {ItemPath, Properties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPropertiesAsync(ByVal ItemPath As String, ByVal Properties() As [Property])
            Me.SetPropertiesAsync(ItemPath, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPropertiesAsync(ByVal ItemPath As String, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.SetPropertiesOperationCompleted Is Nothing) Then
                Me.SetPropertiesOperationCompleted = AddressOf Me.OnSetPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetProperties", New Object() {ItemPath, Properties}, Me.SetPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("ItemNamespaceHeaderValue"),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPrope"& _ 
            "rties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProperties(ByVal ItemPath As String, ByVal Properties() As [Property]) As <System.Xml.Serialization.XmlArrayAttribute("Values")> [Property]()
            Dim results() As Object = Me.Invoke("GetProperties", New Object() {ItemPath, Properties})
            Return CType(results(0),[Property]())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPropertiesAsync(ByVal ItemPath As String, ByVal Properties() As [Property])
            Me.GetPropertiesAsync(ItemPath, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPropertiesAsync(ByVal ItemPath As String, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.GetPropertiesOperationCompleted Is Nothing) Then
                Me.GetPropertiesOperationCompleted = AddressOf Me.OnGetPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetProperties", New Object() {ItemPath, Properties}, Me.GetPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPropertiesCompleted(Me, New GetPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemR"& _ 
            "eferences", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetItemReferences(ByVal ItemPath As String, ByVal ItemReferences() As ItemReference)
            Me.Invoke("SetItemReferences", New Object() {ItemPath, ItemReferences})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemReferencesAsync(ByVal ItemPath As String, ByVal ItemReferences() As ItemReference)
            Me.SetItemReferencesAsync(ItemPath, ItemReferences, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemReferencesAsync(ByVal ItemPath As String, ByVal ItemReferences() As ItemReference, ByVal userState As Object)
            If (Me.SetItemReferencesOperationCompleted Is Nothing) Then
                Me.SetItemReferencesOperationCompleted = AddressOf Me.OnSetItemReferencesOperationCompleted
            End If
            Me.InvokeAsync("SetItemReferences", New Object() {ItemPath, ItemReferences}, Me.SetItemReferencesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemReferencesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemReferencesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemReferencesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemR"& _ 
            "eferences", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemReferences(ByVal ItemPath As String, ByVal ReferenceItemType As String) As <System.Xml.Serialization.XmlArrayAttribute("ItemReferences")> ItemReferenceData()
            Dim results() As Object = Me.Invoke("GetItemReferences", New Object() {ItemPath, ReferenceItemType})
            Return CType(results(0),ItemReferenceData())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemReferencesAsync(ByVal ItemPath As String, ByVal ReferenceItemType As String)
            Me.GetItemReferencesAsync(ItemPath, ReferenceItemType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemReferencesAsync(ByVal ItemPath As String, ByVal ReferenceItemType As String, ByVal userState As Object)
            If (Me.GetItemReferencesOperationCompleted Is Nothing) Then
                Me.GetItemReferencesOperationCompleted = AddressOf Me.OnGetItemReferencesOperationCompleted
            End If
            Me.InvokeAsync("GetItemReferences", New Object() {ItemPath, ReferenceItemType}, Me.GetItemReferencesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemReferencesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemReferencesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemReferencesCompleted(Me, New GetItemReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListItem"& _ 
            "Types", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListItemTypes() As String()
            Dim results() As Object = Me.Invoke("ListItemTypes", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListItemTypesAsync()
            Me.ListItemTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListItemTypesAsync(ByVal userState As Object)
            If (Me.ListItemTypesOperationCompleted Is Nothing) Then
                Me.ListItemTypesOperationCompleted = AddressOf Me.OnListItemTypesOperationCompleted
            End If
            Me.InvokeAsync("ListItemTypes", New Object(-1) {}, Me.ListItemTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListItemTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListItemTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListItemTypesCompleted(Me, New ListItemTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSubsc"& _ 
            "riptionProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSubscriptionProperties(ByVal SubscriptionID As String, ByVal ExtensionSettings As ExtensionSettings, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue)
            Me.Invoke("SetSubscriptionProperties", New Object() {SubscriptionID, ExtensionSettings, Description, EventType, MatchData, Parameters})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSubscriptionPropertiesAsync(ByVal SubscriptionID As String, ByVal ExtensionSettings As ExtensionSettings, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue)
            Me.SetSubscriptionPropertiesAsync(SubscriptionID, ExtensionSettings, Description, EventType, MatchData, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSubscriptionPropertiesAsync(ByVal SubscriptionID As String, ByVal ExtensionSettings As ExtensionSettings, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue, ByVal userState As Object)
            If (Me.SetSubscriptionPropertiesOperationCompleted Is Nothing) Then
                Me.SetSubscriptionPropertiesOperationCompleted = AddressOf Me.OnSetSubscriptionPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetSubscriptionProperties", New Object() {SubscriptionID, ExtensionSettings, Description, EventType, MatchData, Parameters}, Me.SetSubscriptionPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSubscriptionPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSubscriptionPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSubscriptionPropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSubsc"& _ 
            "riptionProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubscriptionProperties(ByVal SubscriptionID As String, ByRef ExtensionSettings As ExtensionSettings, ByRef Description As String, ByRef Active As ActiveState, ByRef Status As String, ByRef EventType As String, ByRef MatchData As String, ByRef Parameters() As ParameterValue) As <System.Xml.Serialization.XmlElementAttribute("Owner")> String
            Dim results() As Object = Me.Invoke("GetSubscriptionProperties", New Object() {SubscriptionID})
            ExtensionSettings = CType(results(1),ExtensionSettings)
            Description = CType(results(2),String)
            Active = CType(results(3),ActiveState)
            Status = CType(results(4),String)
            EventType = CType(results(5),String)
            MatchData = CType(results(6),String)
            Parameters = CType(results(7),ParameterValue())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubscriptionPropertiesAsync(ByVal SubscriptionID As String)
            Me.GetSubscriptionPropertiesAsync(SubscriptionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubscriptionPropertiesAsync(ByVal SubscriptionID As String, ByVal userState As Object)
            If (Me.GetSubscriptionPropertiesOperationCompleted Is Nothing) Then
                Me.GetSubscriptionPropertiesOperationCompleted = AddressOf Me.OnGetSubscriptionPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetSubscriptionProperties", New Object() {SubscriptionID}, Me.GetSubscriptionPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubscriptionPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubscriptionPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubscriptionPropertiesCompleted(Me, New GetSubscriptionPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataD"& _ 
            "rivenSubscriptionProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDataDrivenSubscriptionProperties(ByVal DataDrivenSubscriptionID As String, ByVal ExtensionSettings As ExtensionSettings, ByVal DataRetrievalPlan As DataRetrievalPlan, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValueOrFieldReference)
            Me.Invoke("SetDataDrivenSubscriptionProperties", New Object() {DataDrivenSubscriptionID, ExtensionSettings, DataRetrievalPlan, Description, EventType, MatchData, Parameters})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDataDrivenSubscriptionPropertiesAsync(ByVal DataDrivenSubscriptionID As String, ByVal ExtensionSettings As ExtensionSettings, ByVal DataRetrievalPlan As DataRetrievalPlan, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValueOrFieldReference)
            Me.SetDataDrivenSubscriptionPropertiesAsync(DataDrivenSubscriptionID, ExtensionSettings, DataRetrievalPlan, Description, EventType, MatchData, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDataDrivenSubscriptionPropertiesAsync(ByVal DataDrivenSubscriptionID As String, ByVal ExtensionSettings As ExtensionSettings, ByVal DataRetrievalPlan As DataRetrievalPlan, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValueOrFieldReference, ByVal userState As Object)
            If (Me.SetDataDrivenSubscriptionPropertiesOperationCompleted Is Nothing) Then
                Me.SetDataDrivenSubscriptionPropertiesOperationCompleted = AddressOf Me.OnSetDataDrivenSubscriptionPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetDataDrivenSubscriptionProperties", New Object() {DataDrivenSubscriptionID, ExtensionSettings, DataRetrievalPlan, Description, EventType, MatchData, Parameters}, Me.SetDataDrivenSubscriptionPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDataDrivenSubscriptionPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDataDrivenSubscriptionPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDataDrivenSubscriptionPropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataD"& _ 
            "rivenSubscriptionProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataDrivenSubscriptionProperties(ByVal DataDrivenSubscriptionID As String, ByRef ExtensionSettings As ExtensionSettings, ByRef DataRetrievalPlan As DataRetrievalPlan, ByRef Description As String, ByRef Active As ActiveState, ByRef Status As String, ByRef EventType As String, ByRef MatchData As String, ByRef Parameters() As ParameterValueOrFieldReference) As <System.Xml.Serialization.XmlElementAttribute("Owner")> String
            Dim results() As Object = Me.Invoke("GetDataDrivenSubscriptionProperties", New Object() {DataDrivenSubscriptionID})
            ExtensionSettings = CType(results(1),ExtensionSettings)
            DataRetrievalPlan = CType(results(2),DataRetrievalPlan)
            Description = CType(results(3),String)
            Active = CType(results(4),ActiveState)
            Status = CType(results(5),String)
            EventType = CType(results(6),String)
            MatchData = CType(results(7),String)
            Parameters = CType(results(8),ParameterValueOrFieldReference())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataDrivenSubscriptionPropertiesAsync(ByVal DataDrivenSubscriptionID As String)
            Me.GetDataDrivenSubscriptionPropertiesAsync(DataDrivenSubscriptionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataDrivenSubscriptionPropertiesAsync(ByVal DataDrivenSubscriptionID As String, ByVal userState As Object)
            If (Me.GetDataDrivenSubscriptionPropertiesOperationCompleted Is Nothing) Then
                Me.GetDataDrivenSubscriptionPropertiesOperationCompleted = AddressOf Me.OnGetDataDrivenSubscriptionPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetDataDrivenSubscriptionProperties", New Object() {DataDrivenSubscriptionID}, Me.GetDataDrivenSubscriptionPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataDrivenSubscriptionPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataDrivenSubscriptionPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataDrivenSubscriptionPropertiesCompleted(Me, New GetDataDrivenSubscriptionPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSu"& _ 
            "bscription", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSubscription(ByVal SubscriptionID As String)
            Me.Invoke("DeleteSubscription", New Object() {SubscriptionID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSubscriptionAsync(ByVal SubscriptionID As String)
            Me.DeleteSubscriptionAsync(SubscriptionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSubscriptionAsync(ByVal SubscriptionID As String, ByVal userState As Object)
            If (Me.DeleteSubscriptionOperationCompleted Is Nothing) Then
                Me.DeleteSubscriptionOperationCompleted = AddressOf Me.OnDeleteSubscriptionOperationCompleted
            End If
            Me.InvokeAsync("DeleteSubscription", New Object() {SubscriptionID}, Me.DeleteSubscriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSubscriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSubscriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSubscriptionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSu"& _ 
            "bscription", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSubscription(ByVal ItemPath As String, ByVal ExtensionSettings As ExtensionSettings, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue) As <System.Xml.Serialization.XmlElementAttribute("SubscriptionID")> String
            Dim results() As Object = Me.Invoke("CreateSubscription", New Object() {ItemPath, ExtensionSettings, Description, EventType, MatchData, Parameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateSubscriptionAsync(ByVal ItemPath As String, ByVal ExtensionSettings As ExtensionSettings, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue)
            Me.CreateSubscriptionAsync(ItemPath, ExtensionSettings, Description, EventType, MatchData, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateSubscriptionAsync(ByVal ItemPath As String, ByVal ExtensionSettings As ExtensionSettings, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue, ByVal userState As Object)
            If (Me.CreateSubscriptionOperationCompleted Is Nothing) Then
                Me.CreateSubscriptionOperationCompleted = AddressOf Me.OnCreateSubscriptionOperationCompleted
            End If
            Me.InvokeAsync("CreateSubscription", New Object() {ItemPath, ExtensionSettings, Description, EventType, MatchData, Parameters}, Me.CreateSubscriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateSubscriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateSubscriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateSubscriptionCompleted(Me, New CreateSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa"& _ 
            "taDrivenSubscription", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDataDrivenSubscription(ByVal ItemPath As String, ByVal ExtensionSettings As ExtensionSettings, ByVal DataRetrievalPlan As DataRetrievalPlan, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValueOrFieldReference) As <System.Xml.Serialization.XmlElementAttribute("SubscriptionID")> String
            Dim results() As Object = Me.Invoke("CreateDataDrivenSubscription", New Object() {ItemPath, ExtensionSettings, DataRetrievalPlan, Description, EventType, MatchData, Parameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDataDrivenSubscriptionAsync(ByVal ItemPath As String, ByVal ExtensionSettings As ExtensionSettings, ByVal DataRetrievalPlan As DataRetrievalPlan, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValueOrFieldReference)
            Me.CreateDataDrivenSubscriptionAsync(ItemPath, ExtensionSettings, DataRetrievalPlan, Description, EventType, MatchData, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDataDrivenSubscriptionAsync(ByVal ItemPath As String, ByVal ExtensionSettings As ExtensionSettings, ByVal DataRetrievalPlan As DataRetrievalPlan, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValueOrFieldReference, ByVal userState As Object)
            If (Me.CreateDataDrivenSubscriptionOperationCompleted Is Nothing) Then
                Me.CreateDataDrivenSubscriptionOperationCompleted = AddressOf Me.OnCreateDataDrivenSubscriptionOperationCompleted
            End If
            Me.InvokeAsync("CreateDataDrivenSubscription", New Object() {ItemPath, ExtensionSettings, DataRetrievalPlan, Description, EventType, MatchData, Parameters}, Me.CreateDataDrivenSubscriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDataDrivenSubscriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDataDrivenSubscriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDataDrivenSubscriptionCompleted(Me, New CreateDataDrivenSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExten"& _ 
            "sionSettings", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExtensionSettings(ByVal Extension As String) As <System.Xml.Serialization.XmlArrayAttribute("ExtensionParameters")> ExtensionParameter()
            Dim results() As Object = Me.Invoke("GetExtensionSettings", New Object() {Extension})
            Return CType(results(0),ExtensionParameter())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExtensionSettingsAsync(ByVal Extension As String)
            Me.GetExtensionSettingsAsync(Extension, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExtensionSettingsAsync(ByVal Extension As String, ByVal userState As Object)
            If (Me.GetExtensionSettingsOperationCompleted Is Nothing) Then
                Me.GetExtensionSettingsOperationCompleted = AddressOf Me.OnGetExtensionSettingsOperationCompleted
            End If
            Me.InvokeAsync("GetExtensionSettings", New Object() {Extension}, Me.GetExtensionSettingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExtensionSettingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExtensionSettingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExtensionSettingsCompleted(Me, New GetExtensionSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Validate"& _ 
            "ExtensionSettings", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateExtensionSettings(ByVal Extension As String, ByVal ParameterValues() As ParameterValueOrFieldReference, ByVal SiteUrl As String) As <System.Xml.Serialization.XmlArrayAttribute("ParameterErrors")> ExtensionParameter()
            Dim results() As Object = Me.Invoke("ValidateExtensionSettings", New Object() {Extension, ParameterValues, SiteUrl})
            Return CType(results(0),ExtensionParameter())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateExtensionSettingsAsync(ByVal Extension As String, ByVal ParameterValues() As ParameterValueOrFieldReference, ByVal SiteUrl As String)
            Me.ValidateExtensionSettingsAsync(Extension, ParameterValues, SiteUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateExtensionSettingsAsync(ByVal Extension As String, ByVal ParameterValues() As ParameterValueOrFieldReference, ByVal SiteUrl As String, ByVal userState As Object)
            If (Me.ValidateExtensionSettingsOperationCompleted Is Nothing) Then
                Me.ValidateExtensionSettingsOperationCompleted = AddressOf Me.OnValidateExtensionSettingsOperationCompleted
            End If
            Me.InvokeAsync("ValidateExtensionSettings", New Object() {Extension, ParameterValues, SiteUrl}, Me.ValidateExtensionSettingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateExtensionSettingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateExtensionSettingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateExtensionSettingsCompleted(Me, New ValidateExtensionSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs"& _ 
            "criptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListSubscriptions(ByVal ItemPathOrSiteURL As String) As <System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")> Subscription()
            Dim results() As Object = Me.Invoke("ListSubscriptions", New Object() {ItemPathOrSiteURL})
            Return CType(results(0),Subscription())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListSubscriptionsAsync(ByVal ItemPathOrSiteURL As String)
            Me.ListSubscriptionsAsync(ItemPathOrSiteURL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListSubscriptionsAsync(ByVal ItemPathOrSiteURL As String, ByVal userState As Object)
            If (Me.ListSubscriptionsOperationCompleted Is Nothing) Then
                Me.ListSubscriptionsOperationCompleted = AddressOf Me.OnListSubscriptionsOperationCompleted
            End If
            Me.InvokeAsync("ListSubscriptions", New Object() {ItemPathOrSiteURL}, Me.ListSubscriptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListSubscriptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListSubscriptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListSubscriptionsCompleted(Me, New ListSubscriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMySu"& _ 
            "bscriptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListMySubscriptions(ByVal ItemPathOrSiteURL As String) As <System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")> Subscription()
            Dim results() As Object = Me.Invoke("ListMySubscriptions", New Object() {ItemPathOrSiteURL})
            Return CType(results(0),Subscription())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListMySubscriptionsAsync(ByVal ItemPathOrSiteURL As String)
            Me.ListMySubscriptionsAsync(ItemPathOrSiteURL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListMySubscriptionsAsync(ByVal ItemPathOrSiteURL As String, ByVal userState As Object)
            If (Me.ListMySubscriptionsOperationCompleted Is Nothing) Then
                Me.ListMySubscriptionsOperationCompleted = AddressOf Me.OnListMySubscriptionsOperationCompleted
            End If
            Me.InvokeAsync("ListMySubscriptions", New Object() {ItemPathOrSiteURL}, Me.ListMySubscriptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListMySubscriptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListMySubscriptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListMySubscriptionsCompleted(Me, New ListMySubscriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSubs"& _ 
            "criptionsUsingDataSource", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListSubscriptionsUsingDataSource(ByVal DataSource As String) As <System.Xml.Serialization.XmlArrayAttribute("SubscriptionItems")> Subscription()
            Dim results() As Object = Me.Invoke("ListSubscriptionsUsingDataSource", New Object() {DataSource})
            Return CType(results(0),Subscription())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListSubscriptionsUsingDataSourceAsync(ByVal DataSource As String)
            Me.ListSubscriptionsUsingDataSourceAsync(DataSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListSubscriptionsUsingDataSourceAsync(ByVal DataSource As String, ByVal userState As Object)
            If (Me.ListSubscriptionsUsingDataSourceOperationCompleted Is Nothing) Then
                Me.ListSubscriptionsUsingDataSourceOperationCompleted = AddressOf Me.OnListSubscriptionsUsingDataSourceOperationCompleted
            End If
            Me.InvokeAsync("ListSubscriptionsUsingDataSource", New Object() {DataSource}, Me.ListSubscriptionsUsingDataSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnListSubscriptionsUsingDataSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListSubscriptionsUsingDataSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListSubscriptionsUsingDataSourceCompleted(Me, New ListSubscriptionsUsingDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ChangeSu"& _ 
            "bscriptionOwner", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ChangeSubscriptionOwner(ByVal SubscriptionID As String, ByVal NewOwner As String)
            Me.Invoke("ChangeSubscriptionOwner", New Object() {SubscriptionID, NewOwner})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeSubscriptionOwnerAsync(ByVal SubscriptionID As String, ByVal NewOwner As String)
            Me.ChangeSubscriptionOwnerAsync(SubscriptionID, NewOwner, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeSubscriptionOwnerAsync(ByVal SubscriptionID As String, ByVal NewOwner As String, ByVal userState As Object)
            If (Me.ChangeSubscriptionOwnerOperationCompleted Is Nothing) Then
                Me.ChangeSubscriptionOwnerOperationCompleted = AddressOf Me.OnChangeSubscriptionOwnerOperationCompleted
            End If
            Me.InvokeAsync("ChangeSubscriptionOwner", New Object() {SubscriptionID, NewOwner}, Me.ChangeSubscriptionOwnerOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeSubscriptionOwnerOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeSubscriptionOwnerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeSubscriptionOwnerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateDa"& _ 
            "taSource", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateDataSource(ByVal DataSource As String, ByVal Parent As String, ByVal Overwrite As Boolean, ByVal Definition As DataSourceDefinition, ByVal Properties() As [Property]) As <System.Xml.Serialization.XmlElementAttribute("ItemInfo")> CatalogItem
            Dim results() As Object = Me.Invoke("CreateDataSource", New Object() {DataSource, Parent, Overwrite, Definition, Properties})
            Return CType(results(0),CatalogItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateDataSourceAsync(ByVal DataSource As String, ByVal Parent As String, ByVal Overwrite As Boolean, ByVal Definition As DataSourceDefinition, ByVal Properties() As [Property])
            Me.CreateDataSourceAsync(DataSource, Parent, Overwrite, Definition, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateDataSourceAsync(ByVal DataSource As String, ByVal Parent As String, ByVal Overwrite As Boolean, ByVal Definition As DataSourceDefinition, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.CreateDataSourceOperationCompleted Is Nothing) Then
                Me.CreateDataSourceOperationCompleted = AddressOf Me.OnCreateDataSourceOperationCompleted
            End If
            Me.InvokeAsync("CreateDataSource", New Object() {DataSource, Parent, Overwrite, Definition, Properties}, Me.CreateDataSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateDataSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateDataSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateDataSourceCompleted(Me, New CreateDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PrepareQ"& _ 
            "uery", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrepareQuery(ByVal DataSource As DataSource, ByVal DataSet As DataSetDefinition, ByRef Changed As Boolean, ByRef ParameterNames() As String) As <System.Xml.Serialization.XmlElementAttribute("DataSettings")> DataSetDefinition
            Dim results() As Object = Me.Invoke("PrepareQuery", New Object() {DataSource, DataSet})
            Changed = CType(results(1),Boolean)
            ParameterNames = CType(results(2),String())
            Return CType(results(0),DataSetDefinition)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrepareQueryAsync(ByVal DataSource As DataSource, ByVal DataSet As DataSetDefinition)
            Me.PrepareQueryAsync(DataSource, DataSet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrepareQueryAsync(ByVal DataSource As DataSource, ByVal DataSet As DataSetDefinition, ByVal userState As Object)
            If (Me.PrepareQueryOperationCompleted Is Nothing) Then
                Me.PrepareQueryOperationCompleted = AddressOf Me.OnPrepareQueryOperationCompleted
            End If
            Me.InvokeAsync("PrepareQuery", New Object() {DataSource, DataSet}, Me.PrepareQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrepareQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrepareQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrepareQueryCompleted(Me, New PrepareQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/EnableDa"& _ 
            "taSource", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EnableDataSource(ByVal DataSource As String)
            Me.Invoke("EnableDataSource", New Object() {DataSource})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnableDataSourceAsync(ByVal DataSource As String)
            Me.EnableDataSourceAsync(DataSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnableDataSourceAsync(ByVal DataSource As String, ByVal userState As Object)
            If (Me.EnableDataSourceOperationCompleted Is Nothing) Then
                Me.EnableDataSourceOperationCompleted = AddressOf Me.OnEnableDataSourceOperationCompleted
            End If
            Me.InvokeAsync("EnableDataSource", New Object() {DataSource}, Me.EnableDataSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnableDataSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnableDataSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnableDataSourceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DisableD"& _ 
            "ataSource", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DisableDataSource(ByVal DataSource As String)
            Me.Invoke("DisableDataSource", New Object() {DataSource})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisableDataSourceAsync(ByVal DataSource As String)
            Me.DisableDataSourceAsync(DataSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisableDataSourceAsync(ByVal DataSource As String, ByVal userState As Object)
            If (Me.DisableDataSourceOperationCompleted Is Nothing) Then
                Me.DisableDataSourceOperationCompleted = AddressOf Me.OnDisableDataSourceOperationCompleted
            End If
            Me.InvokeAsync("DisableDataSource", New Object() {DataSource}, Me.DisableDataSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisableDataSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisableDataSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisableDataSourceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetDataS"& _ 
            "ourceContents", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDataSourceContents(ByVal DataSource As String, ByVal Definition As DataSourceDefinition)
            Me.Invoke("SetDataSourceContents", New Object() {DataSource, Definition})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDataSourceContentsAsync(ByVal DataSource As String, ByVal Definition As DataSourceDefinition)
            Me.SetDataSourceContentsAsync(DataSource, Definition, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDataSourceContentsAsync(ByVal DataSource As String, ByVal Definition As DataSourceDefinition, ByVal userState As Object)
            If (Me.SetDataSourceContentsOperationCompleted Is Nothing) Then
                Me.SetDataSourceContentsOperationCompleted = AddressOf Me.OnSetDataSourceContentsOperationCompleted
            End If
            Me.InvokeAsync("SetDataSourceContents", New Object() {DataSource, Definition}, Me.SetDataSourceContentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDataSourceContentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDataSourceContentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDataSourceContentsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetDataS"& _ 
            "ourceContents", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataSourceContents(ByVal DataSource As String) As <System.Xml.Serialization.XmlElementAttribute("Definition")> DataSourceDefinition
            Dim results() As Object = Me.Invoke("GetDataSourceContents", New Object() {DataSource})
            Return CType(results(0),DataSourceDefinition)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataSourceContentsAsync(ByVal DataSource As String)
            Me.GetDataSourceContentsAsync(DataSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataSourceContentsAsync(ByVal DataSource As String, ByVal userState As Object)
            If (Me.GetDataSourceContentsOperationCompleted Is Nothing) Then
                Me.GetDataSourceContentsOperationCompleted = AddressOf Me.OnGetDataSourceContentsOperationCompleted
            End If
            Me.InvokeAsync("GetDataSourceContents", New Object() {DataSource}, Me.GetDataSourceContentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataSourceContentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataSourceContentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataSourceContentsCompleted(Me, New GetDataSourceContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListData"& _ 
            "baseCredentialRetrievalOptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListDatabaseCredentialRetrievalOptions() As String()
            Dim results() As Object = Me.Invoke("ListDatabaseCredentialRetrievalOptions", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListDatabaseCredentialRetrievalOptionsAsync()
            Me.ListDatabaseCredentialRetrievalOptionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListDatabaseCredentialRetrievalOptionsAsync(ByVal userState As Object)
            If (Me.ListDatabaseCredentialRetrievalOptionsOperationCompleted Is Nothing) Then
                Me.ListDatabaseCredentialRetrievalOptionsOperationCompleted = AddressOf Me.OnListDatabaseCredentialRetrievalOptionsOperationCompleted
            End If
            Me.InvokeAsync("ListDatabaseCredentialRetrievalOptions", New Object(-1) {}, Me.ListDatabaseCredentialRetrievalOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListDatabaseCredentialRetrievalOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListDatabaseCredentialRetrievalOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListDatabaseCredentialRetrievalOptionsCompleted(Me, New ListDatabaseCredentialRetrievalOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemD"& _ 
            "ataSources", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetItemDataSources(ByVal ItemPath As String, ByVal DataSources() As DataSource)
            Me.Invoke("SetItemDataSources", New Object() {ItemPath, DataSources})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemDataSourcesAsync(ByVal ItemPath As String, ByVal DataSources() As DataSource)
            Me.SetItemDataSourcesAsync(ItemPath, DataSources, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemDataSourcesAsync(ByVal ItemPath As String, ByVal DataSources() As DataSource, ByVal userState As Object)
            If (Me.SetItemDataSourcesOperationCompleted Is Nothing) Then
                Me.SetItemDataSourcesOperationCompleted = AddressOf Me.OnSetItemDataSourcesOperationCompleted
            End If
            Me.InvokeAsync("SetItemDataSources", New Object() {ItemPath, DataSources}, Me.SetItemDataSourcesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemDataSourcesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemDataSourcesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemDataSourcesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD"& _ 
            "ataSources", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemDataSources(ByVal ItemPath As String) As <System.Xml.Serialization.XmlArrayAttribute("DataSources")> DataSource()
            Dim results() As Object = Me.Invoke("GetItemDataSources", New Object() {ItemPath})
            Return CType(results(0),DataSource())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemDataSourcesAsync(ByVal ItemPath As String)
            Me.GetItemDataSourcesAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemDataSourcesAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemDataSourcesOperationCompleted Is Nothing) Then
                Me.GetItemDataSourcesOperationCompleted = AddressOf Me.OnGetItemDataSourcesOperationCompleted
            End If
            Me.InvokeAsync("GetItemDataSources", New Object() {ItemPath}, Me.GetItemDataSourcesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemDataSourcesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemDataSourcesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemDataSourcesCompleted(Me, New GetItemDataSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn"& _ 
            "ectForDataSourceDefinition", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TestConnectForDataSourceDefinition(ByVal DataSourceDefinition As DataSourceDefinition, ByVal UserName As String, ByVal Password As String, ByRef ConnectError As String) As Boolean
            Dim results() As Object = Me.Invoke("TestConnectForDataSourceDefinition", New Object() {DataSourceDefinition, UserName, Password})
            ConnectError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestConnectForDataSourceDefinitionAsync(ByVal DataSourceDefinition As DataSourceDefinition, ByVal UserName As String, ByVal Password As String)
            Me.TestConnectForDataSourceDefinitionAsync(DataSourceDefinition, UserName, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestConnectForDataSourceDefinitionAsync(ByVal DataSourceDefinition As DataSourceDefinition, ByVal UserName As String, ByVal Password As String, ByVal userState As Object)
            If (Me.TestConnectForDataSourceDefinitionOperationCompleted Is Nothing) Then
                Me.TestConnectForDataSourceDefinitionOperationCompleted = AddressOf Me.OnTestConnectForDataSourceDefinitionOperationCompleted
            End If
            Me.InvokeAsync("TestConnectForDataSourceDefinition", New Object() {DataSourceDefinition, UserName, Password}, Me.TestConnectForDataSourceDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestConnectForDataSourceDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestConnectForDataSourceDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestConnectForDataSourceDefinitionCompleted(Me, New TestConnectForDataSourceDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/TestConn"& _ 
            "ectForItemDataSource", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TestConnectForItemDataSource(ByVal ItemPath As String, ByVal DataSourceName As String, ByVal UserName As String, ByVal Password As String, ByRef ConnectError As String) As Boolean
            Dim results() As Object = Me.Invoke("TestConnectForItemDataSource", New Object() {ItemPath, DataSourceName, UserName, Password})
            ConnectError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestConnectForItemDataSourceAsync(ByVal ItemPath As String, ByVal DataSourceName As String, ByVal UserName As String, ByVal Password As String)
            Me.TestConnectForItemDataSourceAsync(ItemPath, DataSourceName, UserName, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestConnectForItemDataSourceAsync(ByVal ItemPath As String, ByVal DataSourceName As String, ByVal UserName As String, ByVal Password As String, ByVal userState As Object)
            If (Me.TestConnectForItemDataSourceOperationCompleted Is Nothing) Then
                Me.TestConnectForItemDataSourceOperationCompleted = AddressOf Me.OnTestConnectForItemDataSourceOperationCompleted
            End If
            Me.InvokeAsync("TestConnectForItemDataSource", New Object() {ItemPath, DataSourceName, UserName, Password}, Me.TestConnectForItemDataSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestConnectForItemDataSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestConnectForItemDataSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestConnectForItemDataSourceCompleted(Me, New TestConnectForItemDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRo"& _ 
            "le", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateRole(ByVal Name As String, ByVal Description As String, ByVal TaskIDs() As String)
            Me.Invoke("CreateRole", New Object() {Name, Description, TaskIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRoleAsync(ByVal Name As String, ByVal Description As String, ByVal TaskIDs() As String)
            Me.CreateRoleAsync(Name, Description, TaskIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRoleAsync(ByVal Name As String, ByVal Description As String, ByVal TaskIDs() As String, ByVal userState As Object)
            If (Me.CreateRoleOperationCompleted Is Nothing) Then
                Me.CreateRoleOperationCompleted = AddressOf Me.OnCreateRoleOperationCompleted
            End If
            Me.InvokeAsync("CreateRole", New Object() {Name, Description, TaskIDs}, Me.CreateRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRoleCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetRoleP"& _ 
            "roperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetRoleProperties(ByVal Name As String, ByVal Description As String, ByVal TaskIDs() As String)
            Me.Invoke("SetRoleProperties", New Object() {Name, Description, TaskIDs})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRolePropertiesAsync(ByVal Name As String, ByVal Description As String, ByVal TaskIDs() As String)
            Me.SetRolePropertiesAsync(Name, Description, TaskIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRolePropertiesAsync(ByVal Name As String, ByVal Description As String, ByVal TaskIDs() As String, ByVal userState As Object)
            If (Me.SetRolePropertiesOperationCompleted Is Nothing) Then
                Me.SetRolePropertiesOperationCompleted = AddressOf Me.OnSetRolePropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetRoleProperties", New Object() {Name, Description, TaskIDs}, Me.SetRolePropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRolePropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRolePropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRolePropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRoleP"& _ 
            "roperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRoleProperties(ByVal Name As String, ByVal SiteUrl As String, ByRef Description As String) As <System.Xml.Serialization.XmlArrayAttribute("TaskIDs")> String()
            Dim results() As Object = Me.Invoke("GetRoleProperties", New Object() {Name, SiteUrl})
            Description = CType(results(1),String)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRolePropertiesAsync(ByVal Name As String, ByVal SiteUrl As String)
            Me.GetRolePropertiesAsync(Name, SiteUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRolePropertiesAsync(ByVal Name As String, ByVal SiteUrl As String, ByVal userState As Object)
            If (Me.GetRolePropertiesOperationCompleted Is Nothing) Then
                Me.GetRolePropertiesOperationCompleted = AddressOf Me.OnGetRolePropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetRoleProperties", New Object() {Name, SiteUrl}, Me.GetRolePropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRolePropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRolePropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRolePropertiesCompleted(Me, New GetRolePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteRo"& _ 
            "le", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteRole(ByVal Name As String)
            Me.Invoke("DeleteRole", New Object() {Name})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRoleAsync(ByVal Name As String)
            Me.DeleteRoleAsync(Name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRoleAsync(ByVal Name As String, ByVal userState As Object)
            If (Me.DeleteRoleOperationCompleted Is Nothing) Then
                Me.DeleteRoleOperationCompleted = AddressOf Me.OnDeleteRoleOperationCompleted
            End If
            Me.InvokeAsync("DeleteRole", New Object() {Name}, Me.DeleteRoleOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteRoleOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteRoleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteRoleCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListRole"& _ 
            "s", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListRoles(ByVal SecurityScope As String, ByVal SiteUrl As String) As <System.Xml.Serialization.XmlArrayAttribute("Roles")> Role()
            Dim results() As Object = Me.Invoke("ListRoles", New Object() {SecurityScope, SiteUrl})
            Return CType(results(0),Role())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListRolesAsync(ByVal SecurityScope As String, ByVal SiteUrl As String)
            Me.ListRolesAsync(SecurityScope, SiteUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListRolesAsync(ByVal SecurityScope As String, ByVal SiteUrl As String, ByVal userState As Object)
            If (Me.ListRolesOperationCompleted Is Nothing) Then
                Me.ListRolesOperationCompleted = AddressOf Me.OnListRolesOperationCompleted
            End If
            Me.InvokeAsync("ListRoles", New Object() {SecurityScope, SiteUrl}, Me.ListRolesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListRolesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListRolesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListRolesCompleted(Me, New ListRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListTask"& _ 
            "s", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListTasks(ByVal SecurityScope As String) As <System.Xml.Serialization.XmlArrayAttribute("Tasks")> Task()
            Dim results() As Object = Me.Invoke("ListTasks", New Object() {SecurityScope})
            Return CType(results(0),Task())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListTasksAsync(ByVal SecurityScope As String)
            Me.ListTasksAsync(SecurityScope, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListTasksAsync(ByVal SecurityScope As String, ByVal userState As Object)
            If (Me.ListTasksOperationCompleted Is Nothing) Then
                Me.ListTasksOperationCompleted = AddressOf Me.OnListTasksOperationCompleted
            End If
            Me.InvokeAsync("ListTasks", New Object() {SecurityScope}, Me.ListTasksOperationCompleted, userState)
        End Sub
        
        Private Sub OnListTasksOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListTasksCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListTasksCompleted(Me, New ListTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetPolic"& _ 
            "ies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetPolicies(ByVal ItemPath As String, ByVal Policies() As Policy)
            Me.Invoke("SetPolicies", New Object() {ItemPath, Policies})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPoliciesAsync(ByVal ItemPath As String, ByVal Policies() As Policy)
            Me.SetPoliciesAsync(ItemPath, Policies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPoliciesAsync(ByVal ItemPath As String, ByVal Policies() As Policy, ByVal userState As Object)
            If (Me.SetPoliciesOperationCompleted Is Nothing) Then
                Me.SetPoliciesOperationCompleted = AddressOf Me.OnSetPoliciesOperationCompleted
            End If
            Me.InvokeAsync("SetPolicies", New Object() {ItemPath, Policies}, Me.SetPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPolic"& _ 
            "ies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPolicies(ByVal ItemPath As String, ByRef InheritParent As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("Policies")> Policy()
            Dim results() As Object = Me.Invoke("GetPolicies", New Object() {ItemPath})
            InheritParent = CType(results(1),Boolean)
            Return CType(results(0),Policy())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPoliciesAsync(ByVal ItemPath As String)
            Me.GetPoliciesAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPoliciesAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetPoliciesOperationCompleted Is Nothing) Then
                Me.GetPoliciesOperationCompleted = AddressOf Me.OnGetPoliciesOperationCompleted
            End If
            Me.InvokeAsync("GetPolicies", New Object() {ItemPath}, Me.GetPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPoliciesCompleted(Me, New GetPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemD"& _ 
            "ataSourcePrompts", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemDataSourcePrompts(ByVal ItemPath As String) As <System.Xml.Serialization.XmlArrayAttribute("DataSourcePrompts")> DataSourcePrompt()
            Dim results() As Object = Me.Invoke("GetItemDataSourcePrompts", New Object() {ItemPath})
            Return CType(results(0),DataSourcePrompt())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemDataSourcePromptsAsync(ByVal ItemPath As String)
            Me.GetItemDataSourcePromptsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemDataSourcePromptsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemDataSourcePromptsOperationCompleted Is Nothing) Then
                Me.GetItemDataSourcePromptsOperationCompleted = AddressOf Me.OnGetItemDataSourcePromptsOperationCompleted
            End If
            Me.InvokeAsync("GetItemDataSourcePrompts", New Object() {ItemPath}, Me.GetItemDataSourcePromptsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemDataSourcePromptsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemDataSourcePromptsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemDataSourcePromptsCompleted(Me, New GetItemDataSourcePromptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Generate"& _ 
            "Model", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateModel(ByVal DataSource As String, ByVal Model As String, ByVal Parent As String, ByVal Properties() As [Property], ByRef Warnings() As Warning) As <System.Xml.Serialization.XmlElementAttribute("ItemInfo")> CatalogItem
            Dim results() As Object = Me.Invoke("GenerateModel", New Object() {DataSource, Model, Parent, Properties})
            Warnings = CType(results(1),Warning())
            Return CType(results(0),CatalogItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateModelAsync(ByVal DataSource As String, ByVal Model As String, ByVal Parent As String, ByVal Properties() As [Property])
            Me.GenerateModelAsync(DataSource, Model, Parent, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateModelAsync(ByVal DataSource As String, ByVal Model As String, ByVal Parent As String, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.GenerateModelOperationCompleted Is Nothing) Then
                Me.GenerateModelOperationCompleted = AddressOf Me.OnGenerateModelOperationCompleted
            End If
            Me.InvokeAsync("GenerateModel", New Object() {DataSource, Model, Parent, Properties}, Me.GenerateModelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateModelOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateModelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateModelCompleted(Me, New GenerateModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel"& _ 
            "ItemPermissions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetModelItemPermissions(ByVal Model As String, ByVal ModelItemID As String) As <System.Xml.Serialization.XmlArrayAttribute("Permissions")> String()
            Dim results() As Object = Me.Invoke("GetModelItemPermissions", New Object() {Model, ModelItemID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetModelItemPermissionsAsync(ByVal Model As String, ByVal ModelItemID As String)
            Me.GetModelItemPermissionsAsync(Model, ModelItemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetModelItemPermissionsAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal userState As Object)
            If (Me.GetModelItemPermissionsOperationCompleted Is Nothing) Then
                Me.GetModelItemPermissionsOperationCompleted = AddressOf Me.OnGetModelItemPermissionsOperationCompleted
            End If
            Me.InvokeAsync("GetModelItemPermissions", New Object() {Model, ModelItemID}, Me.GetModelItemPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetModelItemPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetModelItemPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetModelItemPermissionsCompleted(Me, New GetModelItemPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel"& _ 
            "ItemPolicies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetModelItemPolicies(ByVal Model As String, ByVal ModelItemID As String, ByVal Policies() As Policy)
            Me.Invoke("SetModelItemPolicies", New Object() {Model, ModelItemID, Policies})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetModelItemPoliciesAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal Policies() As Policy)
            Me.SetModelItemPoliciesAsync(Model, ModelItemID, Policies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetModelItemPoliciesAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal Policies() As Policy, ByVal userState As Object)
            If (Me.SetModelItemPoliciesOperationCompleted Is Nothing) Then
                Me.SetModelItemPoliciesOperationCompleted = AddressOf Me.OnSetModelItemPoliciesOperationCompleted
            End If
            Me.InvokeAsync("SetModelItemPolicies", New Object() {Model, ModelItemID, Policies}, Me.SetModelItemPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetModelItemPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetModelItemPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetModelItemPoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetModel"& _ 
            "ItemPolicies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetModelItemPolicies(ByVal Model As String, ByVal ModelItemID As String, ByRef InheritParent As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("Policies")> Policy()
            Dim results() As Object = Me.Invoke("GetModelItemPolicies", New Object() {Model, ModelItemID})
            InheritParent = CType(results(1),Boolean)
            Return CType(results(0),Policy())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetModelItemPoliciesAsync(ByVal Model As String, ByVal ModelItemID As String)
            Me.GetModelItemPoliciesAsync(Model, ModelItemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetModelItemPoliciesAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal userState As Object)
            If (Me.GetModelItemPoliciesOperationCompleted Is Nothing) Then
                Me.GetModelItemPoliciesOperationCompleted = AddressOf Me.OnGetModelItemPoliciesOperationCompleted
            End If
            Me.InvokeAsync("GetModelItemPolicies", New Object() {Model, ModelItemID}, Me.GetModelItemPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetModelItemPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetModelItemPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetModelItemPoliciesCompleted(Me, New GetModelItemPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetUserM"& _ 
            "odel", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserModel(ByVal Model As String, ByVal Perspective As String) As <System.Xml.Serialization.XmlElementAttribute("Definition", DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetUserModel", New Object() {Model, Perspective})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserModelAsync(ByVal Model As String, ByVal Perspective As String)
            Me.GetUserModelAsync(Model, Perspective, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserModelAsync(ByVal Model As String, ByVal Perspective As String, ByVal userState As Object)
            If (Me.GetUserModelOperationCompleted Is Nothing) Then
                Me.GetUserModelOperationCompleted = AddressOf Me.OnGetUserModelOperationCompleted
            End If
            Me.InvokeAsync("GetUserModel", New Object() {Model, Perspective}, Me.GetUserModelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserModelOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserModelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserModelCompleted(Me, New GetUserModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/InheritM"& _ 
            "odelItemParentSecurity", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InheritModelItemParentSecurity(ByVal Model As String, ByVal ModelItemID As String)
            Me.Invoke("InheritModelItemParentSecurity", New Object() {Model, ModelItemID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InheritModelItemParentSecurityAsync(ByVal Model As String, ByVal ModelItemID As String)
            Me.InheritModelItemParentSecurityAsync(Model, ModelItemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InheritModelItemParentSecurityAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal userState As Object)
            If (Me.InheritModelItemParentSecurityOperationCompleted Is Nothing) Then
                Me.InheritModelItemParentSecurityOperationCompleted = AddressOf Me.OnInheritModelItemParentSecurityOperationCompleted
            End If
            Me.InvokeAsync("InheritModelItemParentSecurity", New Object() {Model, ModelItemID}, Me.InheritModelItemParentSecurityOperationCompleted, userState)
        End Sub
        
        Private Sub OnInheritModelItemParentSecurityOperationCompleted(ByVal arg As Object)
            If (Not (Me.InheritModelItemParentSecurityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InheritModelItemParentSecurityCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetModel"& _ 
            "DrillthroughReports", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetModelDrillthroughReports(ByVal Model As String, ByVal ModelItemID As String, ByVal Reports() As ModelDrillthroughReport)
            Me.Invoke("SetModelDrillthroughReports", New Object() {Model, ModelItemID, Reports})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetModelDrillthroughReportsAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal Reports() As ModelDrillthroughReport)
            Me.SetModelDrillthroughReportsAsync(Model, ModelItemID, Reports, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetModelDrillthroughReportsAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal Reports() As ModelDrillthroughReport, ByVal userState As Object)
            If (Me.SetModelDrillthroughReportsOperationCompleted Is Nothing) Then
                Me.SetModelDrillthroughReportsOperationCompleted = AddressOf Me.OnSetModelDrillthroughReportsOperationCompleted
            End If
            Me.InvokeAsync("SetModelDrillthroughReports", New Object() {Model, ModelItemID, Reports}, Me.SetModelDrillthroughReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetModelDrillthroughReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetModelDrillthroughReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetModelDrillthroughReportsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode"& _ 
            "lDrillthroughReports", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListModelDrillthroughReports(ByVal Model As String, ByVal ModelItemID As String) As <System.Xml.Serialization.XmlArrayAttribute("Reports")> ModelDrillthroughReport()
            Dim results() As Object = Me.Invoke("ListModelDrillthroughReports", New Object() {Model, ModelItemID})
            Return CType(results(0),ModelDrillthroughReport())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListModelDrillthroughReportsAsync(ByVal Model As String, ByVal ModelItemID As String)
            Me.ListModelDrillthroughReportsAsync(Model, ModelItemID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListModelDrillthroughReportsAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal userState As Object)
            If (Me.ListModelDrillthroughReportsOperationCompleted Is Nothing) Then
                Me.ListModelDrillthroughReportsOperationCompleted = AddressOf Me.OnListModelDrillthroughReportsOperationCompleted
            End If
            Me.InvokeAsync("ListModelDrillthroughReports", New Object() {Model, ModelItemID}, Me.ListModelDrillthroughReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListModelDrillthroughReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListModelDrillthroughReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListModelDrillthroughReportsCompleted(Me, New ListModelDrillthroughReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode"& _ 
            "lItemChildren", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListModelItemChildren(ByVal Model As String, ByVal ModelItemID As String, ByVal Recursive As Boolean) As <System.Xml.Serialization.XmlArrayAttribute("ModelItems")> ModelItem()
            Dim results() As Object = Me.Invoke("ListModelItemChildren", New Object() {Model, ModelItemID, Recursive})
            Return CType(results(0),ModelItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListModelItemChildrenAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal Recursive As Boolean)
            Me.ListModelItemChildrenAsync(Model, ModelItemID, Recursive, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListModelItemChildrenAsync(ByVal Model As String, ByVal ModelItemID As String, ByVal Recursive As Boolean, ByVal userState As Object)
            If (Me.ListModelItemChildrenOperationCompleted Is Nothing) Then
                Me.ListModelItemChildrenOperationCompleted = AddressOf Me.OnListModelItemChildrenOperationCompleted
            End If
            Me.InvokeAsync("ListModelItemChildren", New Object() {Model, ModelItemID, Recursive}, Me.ListModelItemChildrenOperationCompleted, userState)
        End Sub
        
        Private Sub OnListModelItemChildrenOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListModelItemChildrenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListModelItemChildrenCompleted(Me, New ListModelItemChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode"& _ 
            "lItemTypes", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListModelItemTypes() As String()
            Dim results() As Object = Me.Invoke("ListModelItemTypes", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListModelItemTypesAsync()
            Me.ListModelItemTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListModelItemTypesAsync(ByVal userState As Object)
            If (Me.ListModelItemTypesOperationCompleted Is Nothing) Then
                Me.ListModelItemTypesOperationCompleted = AddressOf Me.OnListModelItemTypesOperationCompleted
            End If
            Me.InvokeAsync("ListModelItemTypes", New Object(-1) {}, Me.ListModelItemTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListModelItemTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListModelItemTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListModelItemTypesCompleted(Me, New ListModelItemTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListMode"& _ 
            "lPerspectives", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListModelPerspectives(ByVal Model As String) As <System.Xml.Serialization.XmlArrayAttribute("ModelCatalogItems")> ModelCatalogItem()
            Dim results() As Object = Me.Invoke("ListModelPerspectives", New Object() {Model})
            Return CType(results(0),ModelCatalogItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListModelPerspectivesAsync(ByVal Model As String)
            Me.ListModelPerspectivesAsync(Model, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListModelPerspectivesAsync(ByVal Model As String, ByVal userState As Object)
            If (Me.ListModelPerspectivesOperationCompleted Is Nothing) Then
                Me.ListModelPerspectivesOperationCompleted = AddressOf Me.OnListModelPerspectivesOperationCompleted
            End If
            Me.InvokeAsync("ListModelPerspectives", New Object() {Model}, Me.ListModelPerspectivesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListModelPerspectivesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListModelPerspectivesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListModelPerspectivesCompleted(Me, New ListModelPerspectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Regenera"& _ 
            "teModel", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegenerateModel(ByVal Model As String) As <System.Xml.Serialization.XmlArrayAttribute("Warnings")> Warning()
            Dim results() As Object = Me.Invoke("RegenerateModel", New Object() {Model})
            Return CType(results(0),Warning())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegenerateModelAsync(ByVal Model As String)
            Me.RegenerateModelAsync(Model, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegenerateModelAsync(ByVal Model As String, ByVal userState As Object)
            If (Me.RegenerateModelOperationCompleted Is Nothing) Then
                Me.RegenerateModelOperationCompleted = AddressOf Me.OnRegenerateModelOperationCompleted
            End If
            Me.InvokeAsync("RegenerateModel", New Object() {Model}, Me.RegenerateModelOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegenerateModelOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegenerateModelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegenerateModelCompleted(Me, New RegenerateModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/RemoveAl"& _ 
            "lModelItemPolicies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveAllModelItemPolicies(ByVal Model As String)
            Me.Invoke("RemoveAllModelItemPolicies", New Object() {Model})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllModelItemPoliciesAsync(ByVal Model As String)
            Me.RemoveAllModelItemPoliciesAsync(Model, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveAllModelItemPoliciesAsync(ByVal Model As String, ByVal userState As Object)
            If (Me.RemoveAllModelItemPoliciesOperationCompleted Is Nothing) Then
                Me.RemoveAllModelItemPoliciesOperationCompleted = AddressOf Me.OnRemoveAllModelItemPoliciesOperationCompleted
            End If
            Me.InvokeAsync("RemoveAllModelItemPolicies", New Object() {Model}, Me.RemoveAllModelItemPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveAllModelItemPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveAllModelItemPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveAllModelItemPoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateSc"& _ 
            "hedule", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateSchedule(ByVal Name As String, ByVal ScheduleDefinition As ScheduleDefinition, ByVal SiteUrl As String) As <System.Xml.Serialization.XmlElementAttribute("ScheduleID")> String
            Dim results() As Object = Me.Invoke("CreateSchedule", New Object() {Name, ScheduleDefinition, SiteUrl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateScheduleAsync(ByVal Name As String, ByVal ScheduleDefinition As ScheduleDefinition, ByVal SiteUrl As String)
            Me.CreateScheduleAsync(Name, ScheduleDefinition, SiteUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateScheduleAsync(ByVal Name As String, ByVal ScheduleDefinition As ScheduleDefinition, ByVal SiteUrl As String, ByVal userState As Object)
            If (Me.CreateScheduleOperationCompleted Is Nothing) Then
                Me.CreateScheduleOperationCompleted = AddressOf Me.OnCreateScheduleOperationCompleted
            End If
            Me.InvokeAsync("CreateSchedule", New Object() {Name, ScheduleDefinition, SiteUrl}, Me.CreateScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateScheduleCompleted(Me, New CreateScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteSc"& _ 
            "hedule", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteSchedule(ByVal ScheduleID As String)
            Me.Invoke("DeleteSchedule", New Object() {ScheduleID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteScheduleAsync(ByVal ScheduleID As String)
            Me.DeleteScheduleAsync(ScheduleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteScheduleAsync(ByVal ScheduleID As String, ByVal userState As Object)
            If (Me.DeleteScheduleOperationCompleted Is Nothing) Then
                Me.DeleteScheduleOperationCompleted = AddressOf Me.OnDeleteScheduleOperationCompleted
            End If
            Me.InvokeAsync("DeleteSchedule", New Object() {ScheduleID}, Me.DeleteScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteScheduleCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche"& _ 
            "dules", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListSchedules(ByVal SiteUrl As String) As <System.Xml.Serialization.XmlArrayAttribute("Schedules")> Schedule()
            Dim results() As Object = Me.Invoke("ListSchedules", New Object() {SiteUrl})
            Return CType(results(0),Schedule())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListSchedulesAsync(ByVal SiteUrl As String)
            Me.ListSchedulesAsync(SiteUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListSchedulesAsync(ByVal SiteUrl As String, ByVal userState As Object)
            If (Me.ListSchedulesOperationCompleted Is Nothing) Then
                Me.ListSchedulesOperationCompleted = AddressOf Me.OnListSchedulesOperationCompleted
            End If
            Me.InvokeAsync("ListSchedules", New Object() {SiteUrl}, Me.ListSchedulesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListSchedulesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListSchedulesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListSchedulesCompleted(Me, New ListSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSched"& _ 
            "uleProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetScheduleProperties(ByVal ScheduleID As String) As <System.Xml.Serialization.XmlElementAttribute("Schedule")> Schedule
            Dim results() As Object = Me.Invoke("GetScheduleProperties", New Object() {ScheduleID})
            Return CType(results(0),Schedule)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSchedulePropertiesAsync(ByVal ScheduleID As String)
            Me.GetSchedulePropertiesAsync(ScheduleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSchedulePropertiesAsync(ByVal ScheduleID As String, ByVal userState As Object)
            If (Me.GetSchedulePropertiesOperationCompleted Is Nothing) Then
                Me.GetSchedulePropertiesOperationCompleted = AddressOf Me.OnGetSchedulePropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetScheduleProperties", New Object() {ScheduleID}, Me.GetSchedulePropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSchedulePropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSchedulePropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSchedulePropertiesCompleted(Me, New GetSchedulePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche"& _ 
            "duleStates", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListScheduleStates() As String()
            Dim results() As Object = Me.Invoke("ListScheduleStates", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListScheduleStatesAsync()
            Me.ListScheduleStatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListScheduleStatesAsync(ByVal userState As Object)
            If (Me.ListScheduleStatesOperationCompleted Is Nothing) Then
                Me.ListScheduleStatesOperationCompleted = AddressOf Me.OnListScheduleStatesOperationCompleted
            End If
            Me.InvokeAsync("ListScheduleStates", New Object(-1) {}, Me.ListScheduleStatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListScheduleStatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListScheduleStatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListScheduleStatesCompleted(Me, New ListScheduleStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/PauseSch"& _ 
            "edule", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub PauseSchedule(ByVal ScheduleID As String)
            Me.Invoke("PauseSchedule", New Object() {ScheduleID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PauseScheduleAsync(ByVal ScheduleID As String)
            Me.PauseScheduleAsync(ScheduleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PauseScheduleAsync(ByVal ScheduleID As String, ByVal userState As Object)
            If (Me.PauseScheduleOperationCompleted Is Nothing) Then
                Me.PauseScheduleOperationCompleted = AddressOf Me.OnPauseScheduleOperationCompleted
            End If
            Me.InvokeAsync("PauseSchedule", New Object() {ScheduleID}, Me.PauseScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnPauseScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.PauseScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PauseScheduleCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ResumeSc"& _ 
            "hedule", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResumeSchedule(ByVal ScheduleID As String)
            Me.Invoke("ResumeSchedule", New Object() {ScheduleID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeScheduleAsync(ByVal ScheduleID As String)
            Me.ResumeScheduleAsync(ScheduleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResumeScheduleAsync(ByVal ScheduleID As String, ByVal userState As Object)
            If (Me.ResumeScheduleOperationCompleted Is Nothing) Then
                Me.ResumeScheduleOperationCompleted = AddressOf Me.OnResumeScheduleOperationCompleted
            End If
            Me.InvokeAsync("ResumeSchedule", New Object() {ScheduleID}, Me.ResumeScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnResumeScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResumeScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResumeScheduleCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSched"& _ 
            "uleProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetScheduleProperties(ByVal Name As String, ByVal ScheduleID As String, ByVal ScheduleDefinition As ScheduleDefinition)
            Me.Invoke("SetScheduleProperties", New Object() {Name, ScheduleID, ScheduleDefinition})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSchedulePropertiesAsync(ByVal Name As String, ByVal ScheduleID As String, ByVal ScheduleDefinition As ScheduleDefinition)
            Me.SetSchedulePropertiesAsync(Name, ScheduleID, ScheduleDefinition, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSchedulePropertiesAsync(ByVal Name As String, ByVal ScheduleID As String, ByVal ScheduleDefinition As ScheduleDefinition, ByVal userState As Object)
            If (Me.SetSchedulePropertiesOperationCompleted Is Nothing) Then
                Me.SetSchedulePropertiesOperationCompleted = AddressOf Me.OnSetSchedulePropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetScheduleProperties", New Object() {Name, ScheduleID, ScheduleDefinition}, Me.SetSchedulePropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSchedulePropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSchedulePropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSchedulePropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSche"& _ 
            "duledItems", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListScheduledItems(ByVal ScheduleID As String) As <System.Xml.Serialization.XmlArrayAttribute("Items")> CatalogItem()
            Dim results() As Object = Me.Invoke("ListScheduledItems", New Object() {ScheduleID})
            Return CType(results(0),CatalogItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListScheduledItemsAsync(ByVal ScheduleID As String)
            Me.ListScheduledItemsAsync(ScheduleID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListScheduledItemsAsync(ByVal ScheduleID As String, ByVal userState As Object)
            If (Me.ListScheduledItemsOperationCompleted Is Nothing) Then
                Me.ListScheduledItemsOperationCompleted = AddressOf Me.OnListScheduledItemsOperationCompleted
            End If
            Me.InvokeAsync("ListScheduledItems", New Object() {ScheduleID}, Me.ListScheduledItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListScheduledItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListScheduledItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListScheduledItemsCompleted(Me, New ListScheduledItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemP"& _ 
            "arameters", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetItemParameters(ByVal ItemPath As String, ByVal Parameters() As ItemParameter)
            Me.Invoke("SetItemParameters", New Object() {ItemPath, Parameters})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemParametersAsync(ByVal ItemPath As String, ByVal Parameters() As ItemParameter)
            Me.SetItemParametersAsync(ItemPath, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemParametersAsync(ByVal ItemPath As String, ByVal Parameters() As ItemParameter, ByVal userState As Object)
            If (Me.SetItemParametersOperationCompleted Is Nothing) Then
                Me.SetItemParametersOperationCompleted = AddressOf Me.OnSetItemParametersOperationCompleted
            End If
            Me.InvokeAsync("SetItemParameters", New Object() {ItemPath, Parameters}, Me.SetItemParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemParametersCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemP"& _ 
            "arameters", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemParameters(ByVal ItemPath As String, ByVal HistoryID As String, ByVal ForRendering As Boolean, ByVal Values() As ParameterValue, ByVal Credentials() As DataSourceCredentials) As <System.Xml.Serialization.XmlArrayAttribute("Parameters")> ItemParameter()
            Dim results() As Object = Me.Invoke("GetItemParameters", New Object() {ItemPath, HistoryID, ForRendering, Values, Credentials})
            Return CType(results(0),ItemParameter())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersAsync(ByVal ItemPath As String, ByVal HistoryID As String, ByVal ForRendering As Boolean, ByVal Values() As ParameterValue, ByVal Credentials() As DataSourceCredentials)
            Me.GetItemParametersAsync(ItemPath, HistoryID, ForRendering, Values, Credentials, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemParametersAsync(ByVal ItemPath As String, ByVal HistoryID As String, ByVal ForRendering As Boolean, ByVal Values() As ParameterValue, ByVal Credentials() As DataSourceCredentials, ByVal userState As Object)
            If (Me.GetItemParametersOperationCompleted Is Nothing) Then
                Me.GetItemParametersOperationCompleted = AddressOf Me.OnGetItemParametersOperationCompleted
            End If
            Me.InvokeAsync("GetItemParameters", New Object() {ItemPath, HistoryID, ForRendering, Values, Credentials}, Me.GetItemParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemParametersCompleted(Me, New GetItemParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara"& _ 
            "meterTypes", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListParameterTypes() As String()
            Dim results() As Object = Me.Invoke("ListParameterTypes", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListParameterTypesAsync()
            Me.ListParameterTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListParameterTypesAsync(ByVal userState As Object)
            If (Me.ListParameterTypesOperationCompleted Is Nothing) Then
                Me.ListParameterTypesOperationCompleted = AddressOf Me.OnListParameterTypesOperationCompleted
            End If
            Me.InvokeAsync("ListParameterTypes", New Object(-1) {}, Me.ListParameterTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListParameterTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListParameterTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListParameterTypesCompleted(Me, New ListParameterTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListPara"& _ 
            "meterStates", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListParameterStates() As String()
            Dim results() As Object = Me.Invoke("ListParameterStates", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListParameterStatesAsync()
            Me.ListParameterStatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListParameterStatesAsync(ByVal userState As Object)
            If (Me.ListParameterStatesOperationCompleted Is Nothing) Then
                Me.ListParameterStatesOperationCompleted = AddressOf Me.OnListParameterStatesOperationCompleted
            End If
            Me.InvokeAsync("ListParameterStates", New Object(-1) {}, Me.ListParameterStatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListParameterStatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListParameterStatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListParameterStatesCompleted(Me, New ListParameterStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateRe"& _ 
            "portEditSession", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateReportEditSession(ByVal Report As String, ByVal Parent As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Definition() As Byte, ByRef Warnings() As Warning) As <System.Xml.Serialization.XmlElementAttribute("EditSessionID")> String
            Dim results() As Object = Me.Invoke("CreateReportEditSession", New Object() {Report, Parent, Definition})
            Warnings = CType(results(1),Warning())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateReportEditSessionAsync(ByVal Report As String, ByVal Parent As String, ByVal Definition() As Byte)
            Me.CreateReportEditSessionAsync(Report, Parent, Definition, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateReportEditSessionAsync(ByVal Report As String, ByVal Parent As String, ByVal Definition() As Byte, ByVal userState As Object)
            If (Me.CreateReportEditSessionOperationCompleted Is Nothing) Then
                Me.CreateReportEditSessionOperationCompleted = AddressOf Me.OnCreateReportEditSessionOperationCompleted
            End If
            Me.InvokeAsync("CreateReportEditSession", New Object() {Report, Parent, Definition}, Me.CreateReportEditSessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateReportEditSessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateReportEditSessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateReportEditSessionCompleted(Me, New CreateReportEditSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateLi"& _ 
            "nkedItem", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateLinkedItem(ByVal ItemPath As String, ByVal Parent As String, ByVal Link As String, ByVal Properties() As [Property])
            Me.Invoke("CreateLinkedItem", New Object() {ItemPath, Parent, Link, Properties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateLinkedItemAsync(ByVal ItemPath As String, ByVal Parent As String, ByVal Link As String, ByVal Properties() As [Property])
            Me.CreateLinkedItemAsync(ItemPath, Parent, Link, Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateLinkedItemAsync(ByVal ItemPath As String, ByVal Parent As String, ByVal Link As String, ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.CreateLinkedItemOperationCompleted Is Nothing) Then
                Me.CreateLinkedItemOperationCompleted = AddressOf Me.OnCreateLinkedItemOperationCompleted
            End If
            Me.InvokeAsync("CreateLinkedItem", New Object() {ItemPath, Parent, Link, Properties}, Me.CreateLinkedItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateLinkedItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateLinkedItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateLinkedItemCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemL"& _ 
            "ink", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetItemLink(ByVal ItemPath As String, ByVal Link As String)
            Me.Invoke("SetItemLink", New Object() {ItemPath, Link})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemLinkAsync(ByVal ItemPath As String, ByVal Link As String)
            Me.SetItemLinkAsync(ItemPath, Link, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemLinkAsync(ByVal ItemPath As String, ByVal Link As String, ByVal userState As Object)
            If (Me.SetItemLinkOperationCompleted Is Nothing) Then
                Me.SetItemLinkOperationCompleted = AddressOf Me.OnSetItemLinkOperationCompleted
            End If
            Me.InvokeAsync("SetItemLink", New Object() {ItemPath, Link}, Me.SetItemLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemLinkCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemL"& _ 
            "ink", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemLink(ByVal ItemPath As String) As <System.Xml.Serialization.XmlElementAttribute("Link")> String
            Dim results() As Object = Me.Invoke("GetItemLink", New Object() {ItemPath})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemLinkAsync(ByVal ItemPath As String)
            Me.GetItemLinkAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemLinkAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemLinkOperationCompleted Is Nothing) Then
                Me.GetItemLinkOperationCompleted = AddressOf Me.OnGetItemLinkOperationCompleted
            End If
            Me.InvokeAsync("GetItemLink", New Object() {ItemPath}, Me.GetItemLinkOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemLinkOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemLinkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemLinkCompleted(Me, New GetItemLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExec"& _ 
            "utionSettings", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListExecutionSettings() As String()
            Dim results() As Object = Me.Invoke("ListExecutionSettings", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListExecutionSettingsAsync()
            Me.ListExecutionSettingsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListExecutionSettingsAsync(ByVal userState As Object)
            If (Me.ListExecutionSettingsOperationCompleted Is Nothing) Then
                Me.ListExecutionSettingsOperationCompleted = AddressOf Me.OnListExecutionSettingsOperationCompleted
            End If
            Me.InvokeAsync("ListExecutionSettings", New Object(-1) {}, Me.ListExecutionSettingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListExecutionSettingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListExecutionSettingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListExecutionSettingsCompleted(Me, New ListExecutionSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetExecu"& _ 
            "tionOptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetExecutionOptions(ByVal ItemPath As String, ByVal ExecutionSetting As String, <System.Xml.Serialization.XmlElementAttribute("NoSchedule", GetType(NoSchedule)), System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", GetType(ScheduleDefinition)), System.Xml.Serialization.XmlElementAttribute("ScheduleReference", GetType(ScheduleReference))> ByVal Item As ScheduleDefinitionOrReference)
            Me.Invoke("SetExecutionOptions", New Object() {ItemPath, ExecutionSetting, Item})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetExecutionOptionsAsync(ByVal ItemPath As String, ByVal ExecutionSetting As String, ByVal Item As ScheduleDefinitionOrReference)
            Me.SetExecutionOptionsAsync(ItemPath, ExecutionSetting, Item, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetExecutionOptionsAsync(ByVal ItemPath As String, ByVal ExecutionSetting As String, ByVal Item As ScheduleDefinitionOrReference, ByVal userState As Object)
            If (Me.SetExecutionOptionsOperationCompleted Is Nothing) Then
                Me.SetExecutionOptionsOperationCompleted = AddressOf Me.OnSetExecutionOptionsOperationCompleted
            End If
            Me.InvokeAsync("SetExecutionOptions", New Object() {ItemPath, ExecutionSetting, Item}, Me.SetExecutionOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetExecutionOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetExecutionOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetExecutionOptionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetExecu"& _ 
            "tionOptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExecutionOptions(ByVal ItemPath As String, <System.Xml.Serialization.XmlElementAttribute("NoSchedule", GetType(NoSchedule)), System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", GetType(ScheduleDefinition)), System.Xml.Serialization.XmlElementAttribute("ScheduleReference", GetType(ScheduleReference))> ByRef Item As ScheduleDefinitionOrReference) As <System.Xml.Serialization.XmlElementAttribute("ExecutionSetting")> String
            Dim results() As Object = Me.Invoke("GetExecutionOptions", New Object() {ItemPath})
            Item = CType(results(1),ScheduleDefinitionOrReference)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExecutionOptionsAsync(ByVal ItemPath As String)
            Me.GetExecutionOptionsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExecutionOptionsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetExecutionOptionsOperationCompleted Is Nothing) Then
                Me.GetExecutionOptionsOperationCompleted = AddressOf Me.OnGetExecutionOptionsOperationCompleted
            End If
            Me.InvokeAsync("GetExecutionOptions", New Object() {ItemPath}, Me.GetExecutionOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExecutionOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExecutionOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExecutionOptionsCompleted(Me, New GetExecutionOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/UpdateIt"& _ 
            "emExecutionSnapshot", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateItemExecutionSnapshot(ByVal ItemPath As String)
            Me.Invoke("UpdateItemExecutionSnapshot", New Object() {ItemPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateItemExecutionSnapshotAsync(ByVal ItemPath As String)
            Me.UpdateItemExecutionSnapshotAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateItemExecutionSnapshotAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.UpdateItemExecutionSnapshotOperationCompleted Is Nothing) Then
                Me.UpdateItemExecutionSnapshotOperationCompleted = AddressOf Me.OnUpdateItemExecutionSnapshotOperationCompleted
            End If
            Me.InvokeAsync("UpdateItemExecutionSnapshot", New Object() {ItemPath}, Me.UpdateItemExecutionSnapshotOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateItemExecutionSnapshotOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateItemExecutionSnapshotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateItemExecutionSnapshotCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache"& _ 
            "Options", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetCacheOptions(ByVal ItemPath As String, ByVal CacheItem As Boolean, <System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", GetType(ScheduleExpiration)), System.Xml.Serialization.XmlElementAttribute("TimeExpiration", GetType(TimeExpiration))> ByVal Item As ExpirationDefinition)
            Me.Invoke("SetCacheOptions", New Object() {ItemPath, CacheItem, Item})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCacheOptionsAsync(ByVal ItemPath As String, ByVal CacheItem As Boolean, ByVal Item As ExpirationDefinition)
            Me.SetCacheOptionsAsync(ItemPath, CacheItem, Item, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCacheOptionsAsync(ByVal ItemPath As String, ByVal CacheItem As Boolean, ByVal Item As ExpirationDefinition, ByVal userState As Object)
            If (Me.SetCacheOptionsOperationCompleted Is Nothing) Then
                Me.SetCacheOptionsOperationCompleted = AddressOf Me.OnSetCacheOptionsOperationCompleted
            End If
            Me.InvokeAsync("SetCacheOptions", New Object() {ItemPath, CacheItem, Item}, Me.SetCacheOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetCacheOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetCacheOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetCacheOptionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache"& _ 
            "Options", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCacheOptions(ByVal ItemPath As String, <System.Xml.Serialization.XmlElementAttribute("ScheduleExpiration", GetType(ScheduleExpiration)), System.Xml.Serialization.XmlElementAttribute("TimeExpiration", GetType(TimeExpiration))> ByRef Item As ExpirationDefinition) As <System.Xml.Serialization.XmlElementAttribute("CacheItem")> Boolean
            Dim results() As Object = Me.Invoke("GetCacheOptions", New Object() {ItemPath})
            Item = CType(results(1),ExpirationDefinition)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCacheOptionsAsync(ByVal ItemPath As String)
            Me.GetCacheOptionsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCacheOptionsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetCacheOptionsOperationCompleted Is Nothing) Then
                Me.GetCacheOptionsOperationCompleted = AddressOf Me.OnGetCacheOptionsOperationCompleted
            End If
            Me.InvokeAsync("GetCacheOptions", New Object() {ItemPath}, Me.GetCacheOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCacheOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCacheOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCacheOptionsCompleted(Me, New GetCacheOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FlushCac"& _ 
            "he", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub FlushCache(ByVal ItemPath As String)
            Me.Invoke("FlushCache", New Object() {ItemPath})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FlushCacheAsync(ByVal ItemPath As String)
            Me.FlushCacheAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FlushCacheAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.FlushCacheOperationCompleted Is Nothing) Then
                Me.FlushCacheOperationCompleted = AddressOf Me.OnFlushCacheOperationCompleted
            End If
            Me.InvokeAsync("FlushCache", New Object() {ItemPath}, Me.FlushCacheOperationCompleted, userState)
        End Sub
        
        Private Sub OnFlushCacheOperationCompleted(ByVal arg As Object)
            If (Not (Me.FlushCacheCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FlushCacheCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateIt"& _ 
            "emHistorySnapshot", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateItemHistorySnapshot(ByVal ItemPath As String, ByRef Warnings() As Warning) As <System.Xml.Serialization.XmlElementAttribute("HistoryID")> String
            Dim results() As Object = Me.Invoke("CreateItemHistorySnapshot", New Object() {ItemPath})
            Warnings = CType(results(1),Warning())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateItemHistorySnapshotAsync(ByVal ItemPath As String)
            Me.CreateItemHistorySnapshotAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateItemHistorySnapshotAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.CreateItemHistorySnapshotOperationCompleted Is Nothing) Then
                Me.CreateItemHistorySnapshotOperationCompleted = AddressOf Me.OnCreateItemHistorySnapshotOperationCompleted
            End If
            Me.InvokeAsync("CreateItemHistorySnapshot", New Object() {ItemPath}, Me.CreateItemHistorySnapshotOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateItemHistorySnapshotOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateItemHistorySnapshotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateItemHistorySnapshotCompleted(Me, New CreateItemHistorySnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteIt"& _ 
            "emHistorySnapshot", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteItemHistorySnapshot(ByVal ItemPath As String, ByVal HistoryID As String)
            Me.Invoke("DeleteItemHistorySnapshot", New Object() {ItemPath, HistoryID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemHistorySnapshotAsync(ByVal ItemPath As String, ByVal HistoryID As String)
            Me.DeleteItemHistorySnapshotAsync(ItemPath, HistoryID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemHistorySnapshotAsync(ByVal ItemPath As String, ByVal HistoryID As String, ByVal userState As Object)
            If (Me.DeleteItemHistorySnapshotOperationCompleted Is Nothing) Then
                Me.DeleteItemHistorySnapshotOperationCompleted = AddressOf Me.OnDeleteItemHistorySnapshotOperationCompleted
            End If
            Me.InvokeAsync("DeleteItemHistorySnapshot", New Object() {ItemPath, HistoryID}, Me.DeleteItemHistorySnapshotOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteItemHistorySnapshotOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteItemHistorySnapshotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteItemHistorySnapshotCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH"& _ 
            "istoryLimit", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetItemHistoryLimit(ByVal ItemPath As String, ByVal UseSystem As Boolean, ByVal HistoryLimit As Integer)
            Me.Invoke("SetItemHistoryLimit", New Object() {ItemPath, UseSystem, HistoryLimit})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemHistoryLimitAsync(ByVal ItemPath As String, ByVal UseSystem As Boolean, ByVal HistoryLimit As Integer)
            Me.SetItemHistoryLimitAsync(ItemPath, UseSystem, HistoryLimit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemHistoryLimitAsync(ByVal ItemPath As String, ByVal UseSystem As Boolean, ByVal HistoryLimit As Integer, ByVal userState As Object)
            If (Me.SetItemHistoryLimitOperationCompleted Is Nothing) Then
                Me.SetItemHistoryLimitOperationCompleted = AddressOf Me.OnSetItemHistoryLimitOperationCompleted
            End If
            Me.InvokeAsync("SetItemHistoryLimit", New Object() {ItemPath, UseSystem, HistoryLimit}, Me.SetItemHistoryLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemHistoryLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemHistoryLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemHistoryLimitCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH"& _ 
            "istoryLimit", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemHistoryLimit(ByVal ItemPath As String, ByRef IsSystem As Boolean, ByRef SystemLimit As Integer) As <System.Xml.Serialization.XmlElementAttribute("HistoryLimit")> Integer
            Dim results() As Object = Me.Invoke("GetItemHistoryLimit", New Object() {ItemPath})
            IsSystem = CType(results(1),Boolean)
            SystemLimit = CType(results(2),Integer)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemHistoryLimitAsync(ByVal ItemPath As String)
            Me.GetItemHistoryLimitAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemHistoryLimitAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemHistoryLimitOperationCompleted Is Nothing) Then
                Me.GetItemHistoryLimitOperationCompleted = AddressOf Me.OnGetItemHistoryLimitOperationCompleted
            End If
            Me.InvokeAsync("GetItemHistoryLimit", New Object() {ItemPath}, Me.GetItemHistoryLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemHistoryLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemHistoryLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemHistoryLimitCompleted(Me, New GetItemHistoryLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetItemH"& _ 
            "istoryOptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetItemHistoryOptions(ByVal ItemPath As String, ByVal EnableManualSnapshotCreation As Boolean, ByVal KeepExecutionSnapshots As Boolean, <System.Xml.Serialization.XmlElementAttribute("NoSchedule", GetType(NoSchedule)), System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", GetType(ScheduleDefinition)), System.Xml.Serialization.XmlElementAttribute("ScheduleReference", GetType(ScheduleReference))> ByVal Item As ScheduleDefinitionOrReference)
            Me.Invoke("SetItemHistoryOptions", New Object() {ItemPath, EnableManualSnapshotCreation, KeepExecutionSnapshots, Item})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemHistoryOptionsAsync(ByVal ItemPath As String, ByVal EnableManualSnapshotCreation As Boolean, ByVal KeepExecutionSnapshots As Boolean, ByVal Item As ScheduleDefinitionOrReference)
            Me.SetItemHistoryOptionsAsync(ItemPath, EnableManualSnapshotCreation, KeepExecutionSnapshots, Item, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetItemHistoryOptionsAsync(ByVal ItemPath As String, ByVal EnableManualSnapshotCreation As Boolean, ByVal KeepExecutionSnapshots As Boolean, ByVal Item As ScheduleDefinitionOrReference, ByVal userState As Object)
            If (Me.SetItemHistoryOptionsOperationCompleted Is Nothing) Then
                Me.SetItemHistoryOptionsOperationCompleted = AddressOf Me.OnSetItemHistoryOptionsOperationCompleted
            End If
            Me.InvokeAsync("SetItemHistoryOptions", New Object() {ItemPath, EnableManualSnapshotCreation, KeepExecutionSnapshots, Item}, Me.SetItemHistoryOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetItemHistoryOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetItemHistoryOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetItemHistoryOptionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetItemH"& _ 
            "istoryOptions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemHistoryOptions(ByVal ItemPath As String, ByRef KeepExecutionSnapshots As Boolean, <System.Xml.Serialization.XmlElementAttribute("NoSchedule", GetType(NoSchedule)), System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", GetType(ScheduleDefinition)), System.Xml.Serialization.XmlElementAttribute("ScheduleReference", GetType(ScheduleReference))> ByRef Item As ScheduleDefinitionOrReference) As <System.Xml.Serialization.XmlElementAttribute("EnableManualSnapshotCreation")> Boolean
            Dim results() As Object = Me.Invoke("GetItemHistoryOptions", New Object() {ItemPath})
            KeepExecutionSnapshots = CType(results(1),Boolean)
            Item = CType(results(2),ScheduleDefinitionOrReference)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemHistoryOptionsAsync(ByVal ItemPath As String)
            Me.GetItemHistoryOptionsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemHistoryOptionsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetItemHistoryOptionsOperationCompleted Is Nothing) Then
                Me.GetItemHistoryOptionsOperationCompleted = AddressOf Me.OnGetItemHistoryOptionsOperationCompleted
            End If
            Me.InvokeAsync("GetItemHistoryOptions", New Object() {ItemPath}, Me.GetItemHistoryOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemHistoryOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemHistoryOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemHistoryOptionsCompleted(Me, New GetItemHistoryOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetRepor"& _ 
            "tServerConfigInfo", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportServerConfigInfo(ByVal ScaleOut As Boolean) As <System.Xml.Serialization.XmlElementAttribute("ServerConfigInfo")> String
            Dim results() As Object = Me.Invoke("GetReportServerConfigInfo", New Object() {ScaleOut})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportServerConfigInfoAsync(ByVal ScaleOut As Boolean)
            Me.GetReportServerConfigInfoAsync(ScaleOut, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportServerConfigInfoAsync(ByVal ScaleOut As Boolean, ByVal userState As Object)
            If (Me.GetReportServerConfigInfoOperationCompleted Is Nothing) Then
                Me.GetReportServerConfigInfoOperationCompleted = AddressOf Me.OnGetReportServerConfigInfoOperationCompleted
            End If
            Me.InvokeAsync("GetReportServerConfigInfo", New Object() {ScaleOut}, Me.GetReportServerConfigInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportServerConfigInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportServerConfigInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportServerConfigInfoCompleted(Me, New GetReportServerConfigInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/IsSSLReq"& _ 
            "uired", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsSSLRequired() As Boolean
            Dim results() As Object = Me.Invoke("IsSSLRequired", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsSSLRequiredAsync()
            Me.IsSSLRequiredAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsSSLRequiredAsync(ByVal userState As Object)
            If (Me.IsSSLRequiredOperationCompleted Is Nothing) Then
                Me.IsSSLRequiredOperationCompleted = AddressOf Me.OnIsSSLRequiredOperationCompleted
            End If
            Me.InvokeAsync("IsSSLRequired", New Object(-1) {}, Me.IsSSLRequiredOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsSSLRequiredOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsSSLRequiredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsSSLRequiredCompleted(Me, New IsSSLRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste"& _ 
            "mProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSystemProperties(ByVal Properties() As [Property])
            Me.Invoke("SetSystemProperties", New Object() {Properties})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSystemPropertiesAsync(ByVal Properties() As [Property])
            Me.SetSystemPropertiesAsync(Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSystemPropertiesAsync(ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.SetSystemPropertiesOperationCompleted Is Nothing) Then
                Me.SetSystemPropertiesOperationCompleted = AddressOf Me.OnSetSystemPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetSystemProperties", New Object() {Properties}, Me.SetSystemPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSystemPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSystemPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSystemPropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste"& _ 
            "mProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSystemProperties(ByVal Properties() As [Property]) As <System.Xml.Serialization.XmlArrayAttribute("Values")> [Property]()
            Dim results() As Object = Me.Invoke("GetSystemProperties", New Object() {Properties})
            Return CType(results(0),[Property]())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemPropertiesAsync(ByVal Properties() As [Property])
            Me.GetSystemPropertiesAsync(Properties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemPropertiesAsync(ByVal Properties() As [Property], ByVal userState As Object)
            If (Me.GetSystemPropertiesOperationCompleted Is Nothing) Then
                Me.GetSystemPropertiesOperationCompleted = AddressOf Me.OnGetSystemPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetSystemProperties", New Object() {Properties}, Me.GetSystemPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemPropertiesCompleted(Me, New GetSystemPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetSyste"& _ 
            "mPolicies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetSystemPolicies(ByVal Policies() As Policy)
            Me.Invoke("SetSystemPolicies", New Object() {Policies})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSystemPoliciesAsync(ByVal Policies() As Policy)
            Me.SetSystemPoliciesAsync(Policies, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSystemPoliciesAsync(ByVal Policies() As Policy, ByVal userState As Object)
            If (Me.SetSystemPoliciesOperationCompleted Is Nothing) Then
                Me.SetSystemPoliciesOperationCompleted = AddressOf Me.OnSetSystemPoliciesOperationCompleted
            End If
            Me.InvokeAsync("SetSystemPolicies", New Object() {Policies}, Me.SetSystemPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSystemPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSystemPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSystemPoliciesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste"& _ 
            "mPolicies", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSystemPolicies() As <System.Xml.Serialization.XmlArrayAttribute("Policies")> Policy()
            Dim results() As Object = Me.Invoke("GetSystemPolicies", New Object(-1) {})
            Return CType(results(0),Policy())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemPoliciesAsync()
            Me.GetSystemPoliciesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemPoliciesAsync(ByVal userState As Object)
            If (Me.GetSystemPoliciesOperationCompleted Is Nothing) Then
                Me.GetSystemPoliciesOperationCompleted = AddressOf Me.OnGetSystemPoliciesOperationCompleted
            End If
            Me.InvokeAsync("GetSystemPolicies", New Object(-1) {}, Me.GetSystemPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemPoliciesCompleted(Me, New GetSystemPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte"& _ 
            "nsions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListExtensions(ByVal ExtensionType As String) As <System.Xml.Serialization.XmlArrayAttribute("Extensions")> Extension()
            Dim results() As Object = Me.Invoke("ListExtensions", New Object() {ExtensionType})
            Return CType(results(0),Extension())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListExtensionsAsync(ByVal ExtensionType As String)
            Me.ListExtensionsAsync(ExtensionType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListExtensionsAsync(ByVal ExtensionType As String, ByVal userState As Object)
            If (Me.ListExtensionsOperationCompleted Is Nothing) Then
                Me.ListExtensionsOperationCompleted = AddressOf Me.OnListExtensionsOperationCompleted
            End If
            Me.InvokeAsync("ListExtensions", New Object() {ExtensionType}, Me.ListExtensionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListExtensionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListExtensionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListExtensionsCompleted(Me, New ListExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListExte"& _ 
            "nsionTypes", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListExtensionTypes() As String()
            Dim results() As Object = Me.Invoke("ListExtensionTypes", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListExtensionTypesAsync()
            Me.ListExtensionTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListExtensionTypesAsync(ByVal userState As Object)
            If (Me.ListExtensionTypesOperationCompleted Is Nothing) Then
                Me.ListExtensionTypesOperationCompleted = AddressOf Me.OnListExtensionTypesOperationCompleted
            End If
            Me.InvokeAsync("ListExtensionTypes", New Object(-1) {}, Me.ListExtensionTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListExtensionTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListExtensionTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListExtensionTypesCompleted(Me, New ListExtensionTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListEven"& _ 
            "ts", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEvents() As <System.Xml.Serialization.XmlArrayAttribute("Events")> [Event]()
            Dim results() As Object = Me.Invoke("ListEvents", New Object(-1) {})
            Return CType(results(0),[Event]())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEventsAsync()
            Me.ListEventsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEventsAsync(ByVal userState As Object)
            If (Me.ListEventsOperationCompleted Is Nothing) Then
                Me.ListEventsOperationCompleted = AddressOf Me.OnListEventsOperationCompleted
            End If
            Me.InvokeAsync("ListEvents", New Object(-1) {}, Me.ListEventsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEventsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEventsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEventsCompleted(Me, New ListEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/FireEven"& _ 
            "t", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub FireEvent(ByVal EventType As String, ByVal EventData As String, ByVal SiteUrl As String)
            Me.Invoke("FireEvent", New Object() {EventType, EventData, SiteUrl})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FireEventAsync(ByVal EventType As String, ByVal EventData As String, ByVal SiteUrl As String)
            Me.FireEventAsync(EventType, EventData, SiteUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FireEventAsync(ByVal EventType As String, ByVal EventData As String, ByVal SiteUrl As String, ByVal userState As Object)
            If (Me.FireEventOperationCompleted Is Nothing) Then
                Me.FireEventOperationCompleted = AddressOf Me.OnFireEventOperationCompleted
            End If
            Me.InvokeAsync("FireEvent", New Object() {EventType, EventData, SiteUrl}, Me.FireEventOperationCompleted, userState)
        End Sub
        
        Private Sub OnFireEventOperationCompleted(ByVal arg As Object)
            If (Not (Me.FireEventCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FireEventCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobs"& _ 
            "", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListJobs() As <System.Xml.Serialization.XmlArrayAttribute("Jobs")> Job()
            Dim results() As Object = Me.Invoke("ListJobs", New Object(-1) {})
            Return CType(results(0),Job())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListJobsAsync()
            Me.ListJobsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListJobsAsync(ByVal userState As Object)
            If (Me.ListJobsOperationCompleted Is Nothing) Then
                Me.ListJobsOperationCompleted = AddressOf Me.OnListJobsOperationCompleted
            End If
            Me.InvokeAsync("ListJobs", New Object(-1) {}, Me.ListJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListJobsCompleted(Me, New ListJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobT"& _ 
            "ypes", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListJobTypes() As String()
            Dim results() As Object = Me.Invoke("ListJobTypes", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListJobTypesAsync()
            Me.ListJobTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListJobTypesAsync(ByVal userState As Object)
            If (Me.ListJobTypesOperationCompleted Is Nothing) Then
                Me.ListJobTypesOperationCompleted = AddressOf Me.OnListJobTypesOperationCompleted
            End If
            Me.InvokeAsync("ListJobTypes", New Object(-1) {}, Me.ListJobTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListJobTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListJobTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListJobTypesCompleted(Me, New ListJobTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobA"& _ 
            "ctions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListJobActions() As String()
            Dim results() As Object = Me.Invoke("ListJobActions", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListJobActionsAsync()
            Me.ListJobActionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListJobActionsAsync(ByVal userState As Object)
            If (Me.ListJobActionsOperationCompleted Is Nothing) Then
                Me.ListJobActionsOperationCompleted = AddressOf Me.OnListJobActionsOperationCompleted
            End If
            Me.InvokeAsync("ListJobActions", New Object(-1) {}, Me.ListJobActionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnListJobActionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListJobActionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListJobActionsCompleted(Me, New ListJobActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListJobS"& _ 
            "tates", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListJobStates() As String()
            Dim results() As Object = Me.Invoke("ListJobStates", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListJobStatesAsync()
            Me.ListJobStatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListJobStatesAsync(ByVal userState As Object)
            If (Me.ListJobStatesOperationCompleted Is Nothing) Then
                Me.ListJobStatesOperationCompleted = AddressOf Me.OnListJobStatesOperationCompleted
            End If
            Me.InvokeAsync("ListJobStates", New Object(-1) {}, Me.ListJobStatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListJobStatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListJobStatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListJobStatesCompleted(Me, New ListJobStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CancelJo"& _ 
            "b", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelJob(ByVal JobID As String) As Boolean
            Dim results() As Object = Me.Invoke("CancelJob", New Object() {JobID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelJobAsync(ByVal JobID As String)
            Me.CancelJobAsync(JobID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelJobAsync(ByVal JobID As String, ByVal userState As Object)
            If (Me.CancelJobOperationCompleted Is Nothing) Then
                Me.CancelJobOperationCompleted = AddressOf Me.OnCancelJobOperationCompleted
            End If
            Me.InvokeAsync("CancelJob", New Object() {JobID}, Me.CancelJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelJobCompleted(Me, New CancelJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/CreateCa"& _ 
            "cheRefreshPlan", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCacheRefreshPlan(ByVal ItemPath As String, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue) As <System.Xml.Serialization.XmlElementAttribute("CacheRefreshPlanID")> String
            Dim results() As Object = Me.Invoke("CreateCacheRefreshPlan", New Object() {ItemPath, Description, EventType, MatchData, Parameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCacheRefreshPlanAsync(ByVal ItemPath As String, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue)
            Me.CreateCacheRefreshPlanAsync(ItemPath, Description, EventType, MatchData, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCacheRefreshPlanAsync(ByVal ItemPath As String, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue, ByVal userState As Object)
            If (Me.CreateCacheRefreshPlanOperationCompleted Is Nothing) Then
                Me.CreateCacheRefreshPlanOperationCompleted = AddressOf Me.OnCreateCacheRefreshPlanOperationCompleted
            End If
            Me.InvokeAsync("CreateCacheRefreshPlan", New Object() {ItemPath, Description, EventType, MatchData, Parameters}, Me.CreateCacheRefreshPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCacheRefreshPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCacheRefreshPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCacheRefreshPlanCompleted(Me, New CreateCacheRefreshPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/SetCache"& _ 
            "RefreshPlanProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetCacheRefreshPlanProperties(ByVal CacheRefreshPlanID As String, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue)
            Me.Invoke("SetCacheRefreshPlanProperties", New Object() {CacheRefreshPlanID, Description, EventType, MatchData, Parameters})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCacheRefreshPlanPropertiesAsync(ByVal CacheRefreshPlanID As String, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue)
            Me.SetCacheRefreshPlanPropertiesAsync(CacheRefreshPlanID, Description, EventType, MatchData, Parameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCacheRefreshPlanPropertiesAsync(ByVal CacheRefreshPlanID As String, ByVal Description As String, ByVal EventType As String, ByVal MatchData As String, ByVal Parameters() As ParameterValue, ByVal userState As Object)
            If (Me.SetCacheRefreshPlanPropertiesOperationCompleted Is Nothing) Then
                Me.SetCacheRefreshPlanPropertiesOperationCompleted = AddressOf Me.OnSetCacheRefreshPlanPropertiesOperationCompleted
            End If
            Me.InvokeAsync("SetCacheRefreshPlanProperties", New Object() {CacheRefreshPlanID, Description, EventType, MatchData, Parameters}, Me.SetCacheRefreshPlanPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetCacheRefreshPlanPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetCacheRefreshPlanPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetCacheRefreshPlanPropertiesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetCache"& _ 
            "RefreshPlanProperties", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCacheRefreshPlanProperties(ByVal CacheRefreshPlanID As String, ByRef LastRunStatus As String, ByRef State As CacheRefreshPlanState, ByRef EventType As String, ByRef MatchData As String, ByRef Parameters() As ParameterValue) As <System.Xml.Serialization.XmlElementAttribute("Description")> String
            Dim results() As Object = Me.Invoke("GetCacheRefreshPlanProperties", New Object() {CacheRefreshPlanID})
            LastRunStatus = CType(results(1),String)
            State = CType(results(2),CacheRefreshPlanState)
            EventType = CType(results(3),String)
            MatchData = CType(results(4),String)
            Parameters = CType(results(5),ParameterValue())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCacheRefreshPlanPropertiesAsync(ByVal CacheRefreshPlanID As String)
            Me.GetCacheRefreshPlanPropertiesAsync(CacheRefreshPlanID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCacheRefreshPlanPropertiesAsync(ByVal CacheRefreshPlanID As String, ByVal userState As Object)
            If (Me.GetCacheRefreshPlanPropertiesOperationCompleted Is Nothing) Then
                Me.GetCacheRefreshPlanPropertiesOperationCompleted = AddressOf Me.OnGetCacheRefreshPlanPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetCacheRefreshPlanProperties", New Object() {CacheRefreshPlanID}, Me.GetCacheRefreshPlanPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCacheRefreshPlanPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCacheRefreshPlanPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCacheRefreshPlanPropertiesCompleted(Me, New GetCacheRefreshPlanPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/DeleteCa"& _ 
            "cheRefreshPlan", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteCacheRefreshPlan(ByVal CacheRefreshPlanID As String)
            Me.Invoke("DeleteCacheRefreshPlan", New Object() {CacheRefreshPlanID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteCacheRefreshPlanAsync(ByVal CacheRefreshPlanID As String)
            Me.DeleteCacheRefreshPlanAsync(CacheRefreshPlanID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteCacheRefreshPlanAsync(ByVal CacheRefreshPlanID As String, ByVal userState As Object)
            If (Me.DeleteCacheRefreshPlanOperationCompleted Is Nothing) Then
                Me.DeleteCacheRefreshPlanOperationCompleted = AddressOf Me.OnDeleteCacheRefreshPlanOperationCompleted
            End If
            Me.InvokeAsync("DeleteCacheRefreshPlan", New Object() {CacheRefreshPlanID}, Me.DeleteCacheRefreshPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteCacheRefreshPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteCacheRefreshPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteCacheRefreshPlanCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListCach"& _ 
            "eRefreshPlans", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListCacheRefreshPlans(ByVal ItemPath As String) As <System.Xml.Serialization.XmlArrayAttribute("CacheRefreshPlans")> CacheRefreshPlan()
            Dim results() As Object = Me.Invoke("ListCacheRefreshPlans", New Object() {ItemPath})
            Return CType(results(0),CacheRefreshPlan())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListCacheRefreshPlansAsync(ByVal ItemPath As String)
            Me.ListCacheRefreshPlansAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListCacheRefreshPlansAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.ListCacheRefreshPlansOperationCompleted Is Nothing) Then
                Me.ListCacheRefreshPlansOperationCompleted = AddressOf Me.OnListCacheRefreshPlansOperationCompleted
            End If
            Me.InvokeAsync("ListCacheRefreshPlans", New Object() {ItemPath}, Me.ListCacheRefreshPlansOperationCompleted, userState)
        End Sub
        
        Private Sub OnListCacheRefreshPlansOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListCacheRefreshPlansCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListCacheRefreshPlansCompleted(Me, New ListCacheRefreshPlansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/LogonUse"& _ 
            "r", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LogonUser(ByVal userName As String, ByVal password As String, ByVal authority As String)
            Me.Invoke("LogonUser", New Object() {userName, password, authority})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogonUserAsync(ByVal userName As String, ByVal password As String, ByVal authority As String)
            Me.LogonUserAsync(userName, password, authority, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogonUserAsync(ByVal userName As String, ByVal password As String, ByVal authority As String, ByVal userState As Object)
            If (Me.LogonUserOperationCompleted Is Nothing) Then
                Me.LogonUserOperationCompleted = AddressOf Me.OnLogonUserOperationCompleted
            End If
            Me.InvokeAsync("LogonUser", New Object() {userName, password, authority}, Me.LogonUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogonUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogonUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogonUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/Logoff", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Logoff()
            Me.Invoke("Logoff", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoffAsync()
            Me.LogoffAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoffAsync(ByVal userState As Object)
            If (Me.LogoffOperationCompleted Is Nothing) Then
                Me.LogoffOperationCompleted = AddressOf Me.OnLogoffOperationCompleted
            End If
            Me.InvokeAsync("Logoff", New Object(-1) {}, Me.LogoffOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogoffOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogoffCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogoffCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetPermi"& _ 
            "ssions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPermissions(ByVal ItemPath As String) As <System.Xml.Serialization.XmlArrayAttribute("Permissions"), System.Xml.Serialization.XmlArrayItemAttribute("Operation")> String()
            Dim results() As Object = Me.Invoke("GetPermissions", New Object() {ItemPath})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPermissionsAsync(ByVal ItemPath As String)
            Me.GetPermissionsAsync(ItemPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPermissionsAsync(ByVal ItemPath As String, ByVal userState As Object)
            If (Me.GetPermissionsOperationCompleted Is Nothing) Then
                Me.GetPermissionsOperationCompleted = AddressOf Me.OnGetPermissionsOperationCompleted
            End If
            Me.InvokeAsync("GetPermissions", New Object() {ItemPath}, Me.GetPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPermissionsCompleted(Me, New GetPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/GetSyste"& _ 
            "mPermissions", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSystemPermissions() As <System.Xml.Serialization.XmlArrayAttribute("Permissions"), System.Xml.Serialization.XmlArrayItemAttribute("Operation")> String()
            Dim results() As Object = Me.Invoke("GetSystemPermissions", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSystemPermissionsAsync()
            Me.GetSystemPermissionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSystemPermissionsAsync(ByVal userState As Object)
            If (Me.GetSystemPermissionsOperationCompleted Is Nothing) Then
                Me.GetSystemPermissionsOperationCompleted = AddressOf Me.OnGetSystemPermissionsOperationCompleted
            End If
            Me.InvokeAsync("GetSystemPermissions", New Object(-1) {}, Me.GetSystemPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSystemPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSystemPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSystemPermissionsCompleted(Me, New GetSystemPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ServerInfoHeaderValue", Direction:=System.Web.Services.Protocols.SoapHeaderDirection.Out),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("TrustedUserHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer/ListSecu"& _ 
            "rityScopes", RequestNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", ResponseNamespace:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListSecurityScopes() As String()
            Dim results() As Object = Me.Invoke("ListSecurityScopes", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListSecurityScopesAsync()
            Me.ListSecurityScopesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListSecurityScopesAsync(ByVal userState As Object)
            If (Me.ListSecurityScopesOperationCompleted Is Nothing) Then
                Me.ListSecurityScopesOperationCompleted = AddressOf Me.OnListSecurityScopesOperationCompleted
            End If
            Me.InvokeAsync("ListSecurityScopes", New Object(-1) {}, Me.ListSecurityScopesOperationCompleted, userState)
        End Sub
        
        Private Sub OnListSecurityScopesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListSecurityScopesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListSecurityScopesCompleted(Me, New ListSecurityScopesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsNullable:=false)>  _
    Partial Public Class ServerInfoHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private reportServerVersionNumberField As String
        
        Private reportServerEditionField As String
        
        Private reportServerVersionField As String
        
        Private reportServerDateTimeField As String
        
        Private reportServerTimeZoneInfoField As TimeZoneInformation
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property ReportServerVersionNumber() As String
            Get
                Return Me.reportServerVersionNumberField
            End Get
            Set
                Me.reportServerVersionNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReportServerEdition() As String
            Get
                Return Me.reportServerEditionField
            End Get
            Set
                Me.reportServerEditionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReportServerVersion() As String
            Get
                Return Me.reportServerVersionField
            End Get
            Set
                Me.reportServerVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReportServerDateTime() As String
            Get
                Return Me.reportServerDateTimeField
            End Get
            Set
                Me.reportServerDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReportServerTimeZoneInfo() As TimeZoneInformation
            Get
                Return Me.reportServerTimeZoneInfoField
            End Get
            Set
                Me.reportServerTimeZoneInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class TimeZoneInformation
        
        Private biasField As Integer
        
        Private standardBiasField As Integer
        
        Private standardDateField As SYSTEMTIME
        
        Private daylightBiasField As Integer
        
        Private daylightDateField As SYSTEMTIME
        
        '''<remarks/>
        Public Property Bias() As Integer
            Get
                Return Me.biasField
            End Get
            Set
                Me.biasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StandardBias() As Integer
            Get
                Return Me.standardBiasField
            End Get
            Set
                Me.standardBiasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StandardDate() As SYSTEMTIME
            Get
                Return Me.standardDateField
            End Get
            Set
                Me.standardDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaylightBias() As Integer
            Get
                Return Me.daylightBiasField
            End Get
            Set
                Me.daylightBiasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaylightDate() As SYSTEMTIME
            Get
                Return Me.daylightDateField
            End Get
            Set
                Me.daylightDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class SYSTEMTIME
        
        Private yearField As Short
        
        Private monthField As Short
        
        Private dayOfWeekField As Short
        
        Private dayField As Short
        
        Private hourField As Short
        
        Private minuteField As Short
        
        Private secondField As Short
        
        Private millisecondsField As Short
        
        '''<remarks/>
        Public Property year() As Short
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property month() As Short
            Get
                Return Me.monthField
            End Get
            Set
                Me.monthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dayOfWeek() As Short
            Get
                Return Me.dayOfWeekField
            End Get
            Set
                Me.dayOfWeekField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property day() As Short
            Get
                Return Me.dayField
            End Get
            Set
                Me.dayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hour() As Short
            Get
                Return Me.hourField
            End Get
            Set
                Me.hourField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property minute() As Short
            Get
                Return Me.minuteField
            End Get
            Set
                Me.minuteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property second() As Short
            Get
                Return Me.secondField
            End Get
            Set
                Me.secondField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property milliseconds() As Short
            Get
                Return Me.millisecondsField
            End Get
            Set
                Me.millisecondsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class CacheRefreshPlan
        
        Private cacheRefreshPlanIDField As String
        
        Private itemPathField As String
        
        Private descriptionField As String
        
        Private stateField As CacheRefreshPlanState
        
        Private lastExecutedField As Date
        
        Private modifiedDateField As Date
        
        Private modifiedByField As String
        
        Private lastRunStatusField As String
        
        '''<remarks/>
        Public Property CacheRefreshPlanID() As String
            Get
                Return Me.cacheRefreshPlanIDField
            End Get
            Set
                Me.cacheRefreshPlanIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ItemPath() As String
            Get
                Return Me.itemPathField
            End Get
            Set
                Me.itemPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As CacheRefreshPlanState
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastExecuted() As Date
            Get
                Return Me.lastExecutedField
            End Get
            Set
                Me.lastExecutedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedDate() As Date
            Get
                Return Me.modifiedDateField
            End Get
            Set
                Me.modifiedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedBy() As String
            Get
                Return Me.modifiedByField
            End Get
            Set
                Me.modifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastRunStatus() As String
            Get
                Return Me.lastRunStatusField
            End Get
            Set
                Me.lastRunStatusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class CacheRefreshPlanState
        
        Private missingParameterValueField As Boolean
        
        Private invalidParameterValueField As Boolean
        
        Private unknownItemParameterField As Boolean
        
        Private cachingNotEnabledOnItemField As Boolean
        
        '''<remarks/>
        Public Property MissingParameterValue() As Boolean
            Get
                Return Me.missingParameterValueField
            End Get
            Set
                Me.missingParameterValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InvalidParameterValue() As Boolean
            Get
                Return Me.invalidParameterValueField
            End Get
            Set
                Me.invalidParameterValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnknownItemParameter() As Boolean
            Get
                Return Me.unknownItemParameterField
            End Get
            Set
                Me.unknownItemParameterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CachingNotEnabledOnItem() As Boolean
            Get
                Return Me.cachingNotEnabledOnItemField
            End Get
            Set
                Me.cachingNotEnabledOnItemField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Job
        
        Private jobIDField As String
        
        Private nameField As String
        
        Private pathField As String
        
        Private descriptionField As String
        
        Private machineField As String
        
        Private userField As String
        
        Private startDateTimeField As Date
        
        Private jobActionNameField As String
        
        Private jobTypeNameField As String
        
        Private jobStatusNameField As String
        
        '''<remarks/>
        Public Property JobID() As String
            Get
                Return Me.jobIDField
            End Get
            Set
                Me.jobIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Machine() As String
            Get
                Return Me.machineField
            End Get
            Set
                Me.machineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property User() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDateTime() As Date
            Get
                Return Me.startDateTimeField
            End Get
            Set
                Me.startDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobActionName() As String
            Get
                Return Me.jobActionNameField
            End Get
            Set
                Me.jobActionNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobTypeName() As String
            Get
                Return Me.jobTypeNameField
            End Get
            Set
                Me.jobTypeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property JobStatusName() As String
            Get
                Return Me.jobStatusNameField
            End Get
            Set
                Me.jobStatusNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class [Event]
        
        Private typeField As String
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Extension
        
        Private extensionTypeNameField As String
        
        Private nameField As String
        
        Private localizedNameField As String
        
        Private visibleField As Boolean
        
        Private isModelGenerationSupportedField As Boolean
        
        '''<remarks/>
        Public Property ExtensionTypeName() As String
            Get
                Return Me.extensionTypeNameField
            End Get
            Set
                Me.extensionTypeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocalizedName() As String
            Get
                Return Me.localizedNameField
            End Get
            Set
                Me.localizedNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Visible() As Boolean
            Get
                Return Me.visibleField
            End Get
            Set
                Me.visibleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsModelGenerationSupported() As Boolean
            Get
                Return Me.isModelGenerationSupportedField
            End Get
            Set
                Me.isModelGenerationSupportedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ScheduleExpiration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TimeExpiration)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ExpirationDefinition
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ScheduleExpiration
        Inherits ExpirationDefinition
        
        Private itemField As ScheduleDefinitionOrReference
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("ScheduleDefinition", GetType(ScheduleDefinition)),  _
         System.Xml.Serialization.XmlElementAttribute("ScheduleReference", GetType(ScheduleReference))>  _
        Public Property Item() As ScheduleDefinitionOrReference
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ScheduleDefinition
        Inherits ScheduleDefinitionOrReference
        
        Private startDateTimeField As Date
        
        Private endDateField As Date
        
        Private endDateFieldSpecified As Boolean
        
        Private itemField As RecurrencePattern
        
        '''<remarks/>
        Public Property StartDateTime() As Date
            Get
                Return Me.startDateTimeField
            End Get
            Set
                Me.startDateTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EndDateSpecified() As Boolean
            Get
                Return Me.endDateFieldSpecified
            End Get
            Set
                Me.endDateFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("DailyRecurrence", GetType(DailyRecurrence)),  _
         System.Xml.Serialization.XmlElementAttribute("MinuteRecurrence", GetType(MinuteRecurrence)),  _
         System.Xml.Serialization.XmlElementAttribute("MonthlyDOWRecurrence", GetType(MonthlyDOWRecurrence)),  _
         System.Xml.Serialization.XmlElementAttribute("MonthlyRecurrence", GetType(MonthlyRecurrence)),  _
         System.Xml.Serialization.XmlElementAttribute("WeeklyRecurrence", GetType(WeeklyRecurrence))>  _
        Public Property Item() As RecurrencePattern
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DailyRecurrence
        Inherits RecurrencePattern
        
        Private daysIntervalField As Integer
        
        '''<remarks/>
        Public Property DaysInterval() As Integer
            Get
                Return Me.daysIntervalField
            End Get
            Set
                Me.daysIntervalField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(MonthlyRecurrence)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MonthlyDOWRecurrence)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MinuteRecurrence)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DailyRecurrence)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(WeeklyRecurrence)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class RecurrencePattern
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class MonthlyRecurrence
        Inherits RecurrencePattern
        
        Private daysField As String
        
        Private monthsOfYearField As MonthsOfYearSelector
        
        '''<remarks/>
        Public Property Days() As String
            Get
                Return Me.daysField
            End Get
            Set
                Me.daysField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MonthsOfYear() As MonthsOfYearSelector
            Get
                Return Me.monthsOfYearField
            End Get
            Set
                Me.monthsOfYearField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class MonthsOfYearSelector
        
        Private januaryField As Boolean
        
        Private februaryField As Boolean
        
        Private marchField As Boolean
        
        Private aprilField As Boolean
        
        Private mayField As Boolean
        
        Private juneField As Boolean
        
        Private julyField As Boolean
        
        Private augustField As Boolean
        
        Private septemberField As Boolean
        
        Private octoberField As Boolean
        
        Private novemberField As Boolean
        
        Private decemberField As Boolean
        
        '''<remarks/>
        Public Property January() As Boolean
            Get
                Return Me.januaryField
            End Get
            Set
                Me.januaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property February() As Boolean
            Get
                Return Me.februaryField
            End Get
            Set
                Me.februaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property March() As Boolean
            Get
                Return Me.marchField
            End Get
            Set
                Me.marchField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property April() As Boolean
            Get
                Return Me.aprilField
            End Get
            Set
                Me.aprilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property May() As Boolean
            Get
                Return Me.mayField
            End Get
            Set
                Me.mayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property June() As Boolean
            Get
                Return Me.juneField
            End Get
            Set
                Me.juneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property July() As Boolean
            Get
                Return Me.julyField
            End Get
            Set
                Me.julyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property August() As Boolean
            Get
                Return Me.augustField
            End Get
            Set
                Me.augustField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property September() As Boolean
            Get
                Return Me.septemberField
            End Get
            Set
                Me.septemberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property October() As Boolean
            Get
                Return Me.octoberField
            End Get
            Set
                Me.octoberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property November() As Boolean
            Get
                Return Me.novemberField
            End Get
            Set
                Me.novemberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property December() As Boolean
            Get
                Return Me.decemberField
            End Get
            Set
                Me.decemberField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class MonthlyDOWRecurrence
        Inherits RecurrencePattern
        
        Private whichWeekField As WeekNumberEnum
        
        Private whichWeekFieldSpecified As Boolean
        
        Private daysOfWeekField As DaysOfWeekSelector
        
        Private monthsOfYearField As MonthsOfYearSelector
        
        '''<remarks/>
        Public Property WhichWeek() As WeekNumberEnum
            Get
                Return Me.whichWeekField
            End Get
            Set
                Me.whichWeekField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property WhichWeekSpecified() As Boolean
            Get
                Return Me.whichWeekFieldSpecified
            End Get
            Set
                Me.whichWeekFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaysOfWeek() As DaysOfWeekSelector
            Get
                Return Me.daysOfWeekField
            End Get
            Set
                Me.daysOfWeekField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MonthsOfYear() As MonthsOfYearSelector
            Get
                Return Me.monthsOfYearField
            End Get
            Set
                Me.monthsOfYearField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum WeekNumberEnum
        
        '''<remarks/>
        FirstWeek
        
        '''<remarks/>
        SecondWeek
        
        '''<remarks/>
        ThirdWeek
        
        '''<remarks/>
        FourthWeek
        
        '''<remarks/>
        LastWeek
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DaysOfWeekSelector
        
        Private sundayField As Boolean
        
        Private mondayField As Boolean
        
        Private tuesdayField As Boolean
        
        Private wednesdayField As Boolean
        
        Private thursdayField As Boolean
        
        Private fridayField As Boolean
        
        Private saturdayField As Boolean
        
        '''<remarks/>
        Public Property Sunday() As Boolean
            Get
                Return Me.sundayField
            End Get
            Set
                Me.sundayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Monday() As Boolean
            Get
                Return Me.mondayField
            End Get
            Set
                Me.mondayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tuesday() As Boolean
            Get
                Return Me.tuesdayField
            End Get
            Set
                Me.tuesdayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Wednesday() As Boolean
            Get
                Return Me.wednesdayField
            End Get
            Set
                Me.wednesdayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Thursday() As Boolean
            Get
                Return Me.thursdayField
            End Get
            Set
                Me.thursdayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Friday() As Boolean
            Get
                Return Me.fridayField
            End Get
            Set
                Me.fridayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Saturday() As Boolean
            Get
                Return Me.saturdayField
            End Get
            Set
                Me.saturdayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class MinuteRecurrence
        Inherits RecurrencePattern
        
        Private minutesIntervalField As Integer
        
        '''<remarks/>
        Public Property MinutesInterval() As Integer
            Get
                Return Me.minutesIntervalField
            End Get
            Set
                Me.minutesIntervalField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class WeeklyRecurrence
        Inherits RecurrencePattern
        
        Private weeksIntervalField As Integer
        
        Private weeksIntervalFieldSpecified As Boolean
        
        Private daysOfWeekField As DaysOfWeekSelector
        
        '''<remarks/>
        Public Property WeeksInterval() As Integer
            Get
                Return Me.weeksIntervalField
            End Get
            Set
                Me.weeksIntervalField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property WeeksIntervalSpecified() As Boolean
            Get
                Return Me.weeksIntervalFieldSpecified
            End Get
            Set
                Me.weeksIntervalFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaysOfWeek() As DaysOfWeekSelector
            Get
                Return Me.daysOfWeekField
            End Get
            Set
                Me.daysOfWeekField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(NoSchedule)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ScheduleReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ScheduleDefinition)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ScheduleDefinitionOrReference
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class NoSchedule
        Inherits ScheduleDefinitionOrReference
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ScheduleReference
        Inherits ScheduleDefinitionOrReference
        
        Private scheduleIDField As String
        
        Private definitionField As ScheduleDefinition
        
        '''<remarks/>
        Public Property ScheduleID() As String
            Get
                Return Me.scheduleIDField
            End Get
            Set
                Me.scheduleIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Definition() As ScheduleDefinition
            Get
                Return Me.definitionField
            End Get
            Set
                Me.definitionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class TimeExpiration
        Inherits ExpirationDefinition
        
        Private minutesField As Integer
        
        '''<remarks/>
        Public Property Minutes() As Integer
            Get
                Return Me.minutesField
            End Get
            Set
                Me.minutesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSourceCredentials
        
        Private dataSourceNameField As String
        
        Private userNameField As String
        
        Private passwordField As String
        
        '''<remarks/>
        Public Property DataSourceName() As String
            Get
                Return Me.dataSourceNameField
            End Get
            Set
                Me.dataSourceNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ItemParameter
        
        Private nameField As String
        
        Private parameterTypeNameField As String
        
        Private nullableField As Boolean
        
        Private nullableFieldSpecified As Boolean
        
        Private allowBlankField As Boolean
        
        Private allowBlankFieldSpecified As Boolean
        
        Private multiValueField As Boolean
        
        Private multiValueFieldSpecified As Boolean
        
        Private queryParameterField As Boolean
        
        Private queryParameterFieldSpecified As Boolean
        
        Private promptField As String
        
        Private promptUserField As Boolean
        
        Private promptUserFieldSpecified As Boolean
        
        Private dependenciesField() As String
        
        Private validValuesQueryBasedField As Boolean
        
        Private validValuesQueryBasedFieldSpecified As Boolean
        
        Private validValuesField() As ValidValue
        
        Private defaultValuesQueryBasedField As Boolean
        
        Private defaultValuesQueryBasedFieldSpecified As Boolean
        
        Private defaultValuesField() As String
        
        Private parameterStateNameField As String
        
        Private errorMessageField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParameterTypeName() As String
            Get
                Return Me.parameterTypeNameField
            End Get
            Set
                Me.parameterTypeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Nullable() As Boolean
            Get
                Return Me.nullableField
            End Get
            Set
                Me.nullableField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property NullableSpecified() As Boolean
            Get
                Return Me.nullableFieldSpecified
            End Get
            Set
                Me.nullableFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowBlank() As Boolean
            Get
                Return Me.allowBlankField
            End Get
            Set
                Me.allowBlankField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property AllowBlankSpecified() As Boolean
            Get
                Return Me.allowBlankFieldSpecified
            End Get
            Set
                Me.allowBlankFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MultiValue() As Boolean
            Get
                Return Me.multiValueField
            End Get
            Set
                Me.multiValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property MultiValueSpecified() As Boolean
            Get
                Return Me.multiValueFieldSpecified
            End Get
            Set
                Me.multiValueFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QueryParameter() As Boolean
            Get
                Return Me.queryParameterField
            End Get
            Set
                Me.queryParameterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property QueryParameterSpecified() As Boolean
            Get
                Return Me.queryParameterFieldSpecified
            End Get
            Set
                Me.queryParameterFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Prompt() As String
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PromptUser() As Boolean
            Get
                Return Me.promptUserField
            End Get
            Set
                Me.promptUserField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property PromptUserSpecified() As Boolean
            Get
                Return Me.promptUserFieldSpecified
            End Get
            Set
                Me.promptUserFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Dependency")>  _
        Public Property Dependencies() As String()
            Get
                Return Me.dependenciesField
            End Get
            Set
                Me.dependenciesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidValuesQueryBased() As Boolean
            Get
                Return Me.validValuesQueryBasedField
            End Get
            Set
                Me.validValuesQueryBasedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ValidValuesQueryBasedSpecified() As Boolean
            Get
                Return Me.validValuesQueryBasedFieldSpecified
            End Get
            Set
                Me.validValuesQueryBasedFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ValidValues() As ValidValue()
            Get
                Return Me.validValuesField
            End Get
            Set
                Me.validValuesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultValuesQueryBased() As Boolean
            Get
                Return Me.defaultValuesQueryBasedField
            End Get
            Set
                Me.defaultValuesQueryBasedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property DefaultValuesQueryBasedSpecified() As Boolean
            Get
                Return Me.defaultValuesQueryBasedFieldSpecified
            End Get
            Set
                Me.defaultValuesQueryBasedFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Value")>  _
        Public Property DefaultValues() As String()
            Get
                Return Me.defaultValuesField
            End Get
            Set
                Me.defaultValuesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ParameterStateName() As String
            Get
                Return Me.parameterStateNameField
            End Get
            Set
                Me.parameterStateNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ValidValue
        
        Private labelField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Schedule
        
        Private scheduleIDField As String
        
        Private nameField As String
        
        Private definitionField As ScheduleDefinition
        
        Private descriptionField As String
        
        Private creatorField As String
        
        Private nextRunTimeField As Date
        
        Private nextRunTimeFieldSpecified As Boolean
        
        Private lastRunTimeField As Date
        
        Private lastRunTimeFieldSpecified As Boolean
        
        Private referencesPresentField As Boolean
        
        Private scheduleStateNameField As String
        
        '''<remarks/>
        Public Property ScheduleID() As String
            Get
                Return Me.scheduleIDField
            End Get
            Set
                Me.scheduleIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Definition() As ScheduleDefinition
            Get
                Return Me.definitionField
            End Get
            Set
                Me.definitionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Creator() As String
            Get
                Return Me.creatorField
            End Get
            Set
                Me.creatorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NextRunTime() As Date
            Get
                Return Me.nextRunTimeField
            End Get
            Set
                Me.nextRunTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property NextRunTimeSpecified() As Boolean
            Get
                Return Me.nextRunTimeFieldSpecified
            End Get
            Set
                Me.nextRunTimeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastRunTime() As Date
            Get
                Return Me.lastRunTimeField
            End Get
            Set
                Me.lastRunTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property LastRunTimeSpecified() As Boolean
            Get
                Return Me.lastRunTimeFieldSpecified
            End Get
            Set
                Me.lastRunTimeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferencesPresent() As Boolean
            Get
                Return Me.referencesPresentField
            End Get
            Set
                Me.referencesPresentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ScheduleStateName() As String
            Get
                Return Me.scheduleStateNameField
            End Get
            Set
                Me.scheduleStateNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ModelPerspective
        
        Private idField As String
        
        Private nameField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ModelCatalogItem
        
        Private modelField As String
        
        Private descriptionField As String
        
        Private perspectivesField() As ModelPerspective
        
        '''<remarks/>
        Public Property Model() As String
            Get
                Return Me.modelField
            End Get
            Set
                Me.modelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Perspectives() As ModelPerspective()
            Get
                Return Me.perspectivesField
            End Get
            Set
                Me.perspectivesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ModelItem
        
        Private idField As String
        
        Private nameField As String
        
        Private modelItemTypeNameField As String
        
        Private descriptionField As String
        
        Private modelItemsField() As ModelItem
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModelItemTypeName() As String
            Get
                Return Me.modelItemTypeNameField
            End Get
            Set
                Me.modelItemTypeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModelItems() As ModelItem()
            Get
                Return Me.modelItemsField
            End Get
            Set
                Me.modelItemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ModelDrillthroughReport
        
        Private pathField As String
        
        Private typeField As DrillthroughType
        
        '''<remarks/>
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As DrillthroughType
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum DrillthroughType
        
        '''<remarks/>
        Detail
        
        '''<remarks/>
        List
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSourcePrompt
        
        Private nameField As String
        
        Private dataSourceIDField As String
        
        Private promptField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataSourceID() As String
            Get
                Return Me.dataSourceIDField
            End Get
            Set
                Me.dataSourceIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Prompt() As String
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Policy
        
        Private groupUserNameField As String
        
        Private rolesField() As Role
        
        '''<remarks/>
        Public Property GroupUserName() As String
            Get
                Return Me.groupUserNameField
            End Get
            Set
                Me.groupUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Roles() As Role()
            Get
                Return Me.rolesField
            End Get
            Set
                Me.rolesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Role
        
        Private nameField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Task
        
        Private taskIDField As String
        
        Private nameField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property TaskID() As String
            Get
                Return Me.taskIDField
            End Get
            Set
                Me.taskIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSource
        
        Private nameField As String
        
        Private itemField As DataSourceDefinitionOrReference
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", GetType(DataSourceDefinition)),  _
         System.Xml.Serialization.XmlElementAttribute("DataSourceReference", GetType(DataSourceReference)),  _
         System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", GetType(InvalidDataSourceReference))>  _
        Public Property Item() As DataSourceDefinitionOrReference
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSourceDefinition
        Inherits DataSourceDefinitionOrReference
        
        Private extensionField As String
        
        Private connectStringField As String
        
        Private useOriginalConnectStringField As Boolean
        
        Private originalConnectStringExpressionBasedField As Boolean
        
        Private credentialRetrievalField As CredentialRetrievalEnum
        
        Private windowsCredentialsField As Boolean
        
        Private impersonateUserField As Boolean
        
        Private impersonateUserFieldSpecified As Boolean
        
        Private promptField As String
        
        Private userNameField As String
        
        Private passwordField As String
        
        Private enabledField As Boolean
        
        Private enabledFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property Extension() As String
            Get
                Return Me.extensionField
            End Get
            Set
                Me.extensionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ConnectString() As String
            Get
                Return Me.connectStringField
            End Get
            Set
                Me.connectStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseOriginalConnectString() As Boolean
            Get
                Return Me.useOriginalConnectStringField
            End Get
            Set
                Me.useOriginalConnectStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OriginalConnectStringExpressionBased() As Boolean
            Get
                Return Me.originalConnectStringExpressionBasedField
            End Get
            Set
                Me.originalConnectStringExpressionBasedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CredentialRetrieval() As CredentialRetrievalEnum
            Get
                Return Me.credentialRetrievalField
            End Get
            Set
                Me.credentialRetrievalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WindowsCredentials() As Boolean
            Get
                Return Me.windowsCredentialsField
            End Get
            Set
                Me.windowsCredentialsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ImpersonateUser() As Boolean
            Get
                Return Me.impersonateUserField
            End Get
            Set
                Me.impersonateUserField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ImpersonateUserSpecified() As Boolean
            Get
                Return Me.impersonateUserFieldSpecified
            End Get
            Set
                Me.impersonateUserFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Prompt() As String
            Get
                Return Me.promptField
            End Get
            Set
                Me.promptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property EnabledSpecified() As Boolean
            Get
                Return Me.enabledFieldSpecified
            End Get
            Set
                Me.enabledFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum CredentialRetrievalEnum
        
        '''<remarks/>
        Prompt
        
        '''<remarks/>
        Store
        
        '''<remarks/>
        Integrated
        
        '''<remarks/>
        None
    End Enum
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(DataSourceReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(InvalidDataSourceReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DataSourceDefinition)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSourceDefinitionOrReference
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSourceReference
        Inherits DataSourceDefinitionOrReference
        
        Private referenceField As String
        
        '''<remarks/>
        Public Property Reference() As String
            Get
                Return Me.referenceField
            End Get
            Set
                Me.referenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class InvalidDataSourceReference
        Inherits DataSourceDefinitionOrReference
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Subscription
        
        Private subscriptionIDField As String
        
        Private ownerField As String
        
        Private pathField As String
        
        Private virtualPathField As String
        
        Private reportField As String
        
        Private deliverySettingsField As ExtensionSettings
        
        Private descriptionField As String
        
        Private statusField As String
        
        Private activeField As ActiveState
        
        Private lastExecutedField As Date
        
        Private lastExecutedFieldSpecified As Boolean
        
        Private modifiedByField As String
        
        Private modifiedDateField As Date
        
        Private eventTypeField As String
        
        Private isDataDrivenField As Boolean
        
        '''<remarks/>
        Public Property SubscriptionID() As String
            Get
                Return Me.subscriptionIDField
            End Get
            Set
                Me.subscriptionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VirtualPath() As String
            Get
                Return Me.virtualPathField
            End Get
            Set
                Me.virtualPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Report() As String
            Get
                Return Me.reportField
            End Get
            Set
                Me.reportField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeliverySettings() As ExtensionSettings
            Get
                Return Me.deliverySettingsField
            End Get
            Set
                Me.deliverySettingsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Active() As ActiveState
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastExecuted() As Date
            Get
                Return Me.lastExecutedField
            End Get
            Set
                Me.lastExecutedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property LastExecutedSpecified() As Boolean
            Get
                Return Me.lastExecutedFieldSpecified
            End Get
            Set
                Me.lastExecutedFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedBy() As String
            Get
                Return Me.modifiedByField
            End Get
            Set
                Me.modifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedDate() As Date
            Get
                Return Me.modifiedDateField
            End Get
            Set
                Me.modifiedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EventType() As String
            Get
                Return Me.eventTypeField
            End Get
            Set
                Me.eventTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsDataDriven() As Boolean
            Get
                Return Me.isDataDrivenField
            End Get
            Set
                Me.isDataDrivenField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ExtensionSettings
        
        Private extensionField As String
        
        Private parameterValuesField() As ParameterValueOrFieldReference
        
        '''<remarks/>
        Public Property Extension() As String
            Get
                Return Me.extensionField
            End Get
            Set
                Me.extensionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute(GetType(ParameterFieldReference)),  _
         System.Xml.Serialization.XmlArrayItemAttribute(GetType(ParameterValue))>  _
        Public Property ParameterValues() As ParameterValueOrFieldReference()
            Get
                Return Me.parameterValuesField
            End Get
            Set
                Me.parameterValuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ParameterFieldReference
        Inherits ParameterValueOrFieldReference
        
        Private parameterNameField As String
        
        Private fieldAliasField As String
        
        '''<remarks/>
        Public Property ParameterName() As String
            Get
                Return Me.parameterNameField
            End Get
            Set
                Me.parameterNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldAlias() As String
            Get
                Return Me.fieldAliasField
            End Get
            Set
                Me.fieldAliasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ParameterFieldReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ParameterValue)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ParameterValueOrFieldReference
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ParameterValue
        Inherits ParameterValueOrFieldReference
        
        Private nameField As String
        
        Private valueField As String
        
        Private labelField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ActiveState
        
        Private deliveryExtensionRemovedField As Boolean
        
        Private deliveryExtensionRemovedFieldSpecified As Boolean
        
        Private sharedDataSourceRemovedField As Boolean
        
        Private sharedDataSourceRemovedFieldSpecified As Boolean
        
        Private missingParameterValueField As Boolean
        
        Private missingParameterValueFieldSpecified As Boolean
        
        Private invalidParameterValueField As Boolean
        
        Private invalidParameterValueFieldSpecified As Boolean
        
        Private unknownReportParameterField As Boolean
        
        Private unknownReportParameterFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property DeliveryExtensionRemoved() As Boolean
            Get
                Return Me.deliveryExtensionRemovedField
            End Get
            Set
                Me.deliveryExtensionRemovedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property DeliveryExtensionRemovedSpecified() As Boolean
            Get
                Return Me.deliveryExtensionRemovedFieldSpecified
            End Get
            Set
                Me.deliveryExtensionRemovedFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SharedDataSourceRemoved() As Boolean
            Get
                Return Me.sharedDataSourceRemovedField
            End Get
            Set
                Me.sharedDataSourceRemovedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property SharedDataSourceRemovedSpecified() As Boolean
            Get
                Return Me.sharedDataSourceRemovedFieldSpecified
            End Get
            Set
                Me.sharedDataSourceRemovedFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MissingParameterValue() As Boolean
            Get
                Return Me.missingParameterValueField
            End Get
            Set
                Me.missingParameterValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property MissingParameterValueSpecified() As Boolean
            Get
                Return Me.missingParameterValueFieldSpecified
            End Get
            Set
                Me.missingParameterValueFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InvalidParameterValue() As Boolean
            Get
                Return Me.invalidParameterValueField
            End Get
            Set
                Me.invalidParameterValueField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property InvalidParameterValueSpecified() As Boolean
            Get
                Return Me.invalidParameterValueFieldSpecified
            End Get
            Set
                Me.invalidParameterValueFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnknownReportParameter() As Boolean
            Get
                Return Me.unknownReportParameterField
            End Get
            Set
                Me.unknownReportParameterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property UnknownReportParameterSpecified() As Boolean
            Get
                Return Me.unknownReportParameterFieldSpecified
            End Get
            Set
                Me.unknownReportParameterFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ExtensionParameter
        
        Private nameField As String
        
        Private displayNameField As String
        
        Private requiredField As Boolean
        
        Private requiredFieldSpecified As Boolean
        
        Private readOnlyField As Boolean
        
        Private valueField As String
        
        Private errorField As String
        
        Private encryptedField As Boolean
        
        Private isPasswordField As Boolean
        
        Private validValuesField() As ValidValue
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Required() As Boolean
            Get
                Return Me.requiredField
            End Get
            Set
                Me.requiredField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property RequiredSpecified() As Boolean
            Get
                Return Me.requiredFieldSpecified
            End Get
            Set
                Me.requiredFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [ReadOnly]() As Boolean
            Get
                Return Me.readOnlyField
            End Get
            Set
                Me.readOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Error]() As String
            Get
                Return Me.errorField
            End Get
            Set
                Me.errorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Encrypted() As Boolean
            Get
                Return Me.encryptedField
            End Get
            Set
                Me.encryptedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsPassword() As Boolean
            Get
                Return Me.isPasswordField
            End Get
            Set
                Me.isPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Value")>  _
        Public Property ValidValues() As ValidValue()
            Get
                Return Me.validValuesField
            End Get
            Set
                Me.validValuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class QueryDefinition
        
        Private commandTypeField As String
        
        Private commandTextField As String
        
        Private timeoutField As Integer
        
        Private timeoutFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property CommandType() As String
            Get
                Return Me.commandTypeField
            End Get
            Set
                Me.commandTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CommandText() As String
            Get
                Return Me.commandTextField
            End Get
            Set
                Me.commandTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Timeout() As Integer
            Get
                Return Me.timeoutField
            End Get
            Set
                Me.timeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property TimeoutSpecified() As Boolean
            Get
                Return Me.timeoutFieldSpecified
            End Get
            Set
                Me.timeoutFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Field
        
        Private aliasField As String
        
        Private nameField As String
        
        '''<remarks/>
        Public Property [Alias]() As String
            Get
                Return Me.aliasField
            End Get
            Set
                Me.aliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataSetDefinition
        
        Private fieldsField() As Field
        
        Private queryField As QueryDefinition
        
        Private caseSensitivityField As SensitivityEnum
        
        Private caseSensitivityFieldSpecified As Boolean
        
        Private collationField As String
        
        Private accentSensitivityField As SensitivityEnum
        
        Private accentSensitivityFieldSpecified As Boolean
        
        Private kanatypeSensitivityField As SensitivityEnum
        
        Private kanatypeSensitivityFieldSpecified As Boolean
        
        Private widthSensitivityField As SensitivityEnum
        
        Private widthSensitivityFieldSpecified As Boolean
        
        Private nameField As String
        
        '''<remarks/>
        Public Property Fields() As Field()
            Get
                Return Me.fieldsField
            End Get
            Set
                Me.fieldsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Query() As QueryDefinition
            Get
                Return Me.queryField
            End Get
            Set
                Me.queryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CaseSensitivity() As SensitivityEnum
            Get
                Return Me.caseSensitivityField
            End Get
            Set
                Me.caseSensitivityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property CaseSensitivitySpecified() As Boolean
            Get
                Return Me.caseSensitivityFieldSpecified
            End Get
            Set
                Me.caseSensitivityFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Collation() As String
            Get
                Return Me.collationField
            End Get
            Set
                Me.collationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccentSensitivity() As SensitivityEnum
            Get
                Return Me.accentSensitivityField
            End Get
            Set
                Me.accentSensitivityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property AccentSensitivitySpecified() As Boolean
            Get
                Return Me.accentSensitivityFieldSpecified
            End Get
            Set
                Me.accentSensitivityFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property KanatypeSensitivity() As SensitivityEnum
            Get
                Return Me.kanatypeSensitivityField
            End Get
            Set
                Me.kanatypeSensitivityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property KanatypeSensitivitySpecified() As Boolean
            Get
                Return Me.kanatypeSensitivityFieldSpecified
            End Get
            Set
                Me.kanatypeSensitivityFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WidthSensitivity() As SensitivityEnum
            Get
                Return Me.widthSensitivityField
            End Get
            Set
                Me.widthSensitivityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property WidthSensitivitySpecified() As Boolean
            Get
                Return Me.widthSensitivityFieldSpecified
            End Get
            Set
                Me.widthSensitivityFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum SensitivityEnum
        
        '''<remarks/>
        [True]
        
        '''<remarks/>
        [False]
        
        '''<remarks/>
        [Auto]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class DataRetrievalPlan
        
        Private itemField As DataSourceDefinitionOrReference
        
        Private dataSetField As DataSetDefinition
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("DataSourceDefinition", GetType(DataSourceDefinition)),  _
         System.Xml.Serialization.XmlElementAttribute("DataSourceReference", GetType(DataSourceReference)),  _
         System.Xml.Serialization.XmlElementAttribute("InvalidDataSourceReference", GetType(InvalidDataSourceReference))>  _
        Public Property Item() As DataSourceDefinitionOrReference
            Get
                Return Me.itemField
            End Get
            Set
                Me.itemField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataSet() As DataSetDefinition
            Get
                Return Me.dataSetField
            End Get
            Set
                Me.dataSetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ItemReferenceData
        
        Private nameField As String
        
        Private referenceField As String
        
        Private referenceTypeField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reference() As String
            Get
                Return Me.referenceField
            End Get
            Set
                Me.referenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferenceType() As String
            Get
                Return Me.referenceTypeField
            End Get
            Set
                Me.referenceTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ItemReference
        
        Private nameField As String
        
        Private referenceField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reference() As String
            Get
                Return Me.referenceField
            End Get
            Set
                Me.referenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class SearchCondition
        
        Private conditionField As ConditionEnum
        
        Private conditionFieldSpecified As Boolean
        
        Private valuesField() As String
        
        Private nameField As String
        
        '''<remarks/>
        Public Property Condition() As ConditionEnum
            Get
                Return Me.conditionField
            End Get
            Set
                Me.conditionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ConditionSpecified() As Boolean
            Get
                Return Me.conditionFieldSpecified
            End Get
            Set
                Me.conditionFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Value")>  _
        Public Property Values() As String()
            Get
                Return Me.valuesField
            End Get
            Set
                Me.valuesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum ConditionEnum
        
        '''<remarks/>
        Contains
        
        '''<remarks/>
        Equals
        
        '''<remarks/>
        [In]
        
        '''<remarks/>
        Between
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class ItemHistorySnapshot
        
        Private historyIDField As String
        
        Private creationDateField As Date
        
        Private sizeField As Integer
        
        '''<remarks/>
        Public Property HistoryID() As String
            Get
                Return Me.historyIDField
            End Get
            Set
                Me.historyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreationDate() As Date
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Size() As Integer
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class Warning
        
        Private codeField As String
        
        Private severityField As String
        
        Private objectNameField As String
        
        Private objectTypeField As String
        
        Private messageField As String
        
        '''<remarks/>
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Severity() As String
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ObjectName() As String
            Get
                Return Me.objectNameField
            End Get
            Set
                Me.objectNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ObjectType() As String
            Get
                Return Me.objectTypeField
            End Get
            Set
                Me.objectTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class CatalogItem
        
        Private idField As String
        
        Private nameField As String
        
        Private pathField As String
        
        Private virtualPathField As String
        
        Private typeNameField As String
        
        Private sizeField As Integer
        
        Private sizeFieldSpecified As Boolean
        
        Private descriptionField As String
        
        Private hiddenField As Boolean
        
        Private hiddenFieldSpecified As Boolean
        
        Private creationDateField As Date
        
        Private creationDateFieldSpecified As Boolean
        
        Private modifiedDateField As Date
        
        Private modifiedDateFieldSpecified As Boolean
        
        Private createdByField As String
        
        Private modifiedByField As String
        
        Private itemMetadataField() As [Property]
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VirtualPath() As String
            Get
                Return Me.virtualPathField
            End Get
            Set
                Me.virtualPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TypeName() As String
            Get
                Return Me.typeNameField
            End Get
            Set
                Me.typeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Size() As Integer
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property SizeSpecified() As Boolean
            Get
                Return Me.sizeFieldSpecified
            End Get
            Set
                Me.sizeFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hidden() As Boolean
            Get
                Return Me.hiddenField
            End Get
            Set
                Me.hiddenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property HiddenSpecified() As Boolean
            Get
                Return Me.hiddenFieldSpecified
            End Get
            Set
                Me.hiddenFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreationDate() As Date
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property CreationDateSpecified() As Boolean
            Get
                Return Me.creationDateFieldSpecified
            End Get
            Set
                Me.creationDateFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedDate() As Date
            Get
                Return Me.modifiedDateField
            End Get
            Set
                Me.modifiedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property ModifiedDateSpecified() As Boolean
            Get
                Return Me.modifiedDateFieldSpecified
            End Get
            Set
                Me.modifiedDateFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedBy() As String
            Get
                Return Me.modifiedByField
            End Get
            Set
                Me.modifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ItemMetadata() As [Property]()
            Get
                Return Me.itemMetadataField
            End Get
            Set
                Me.itemMetadataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Partial Public Class [Property]
        
        Private nameField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsNullable:=false)>  _
    Partial Public Class ItemNamespaceHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private itemNamespaceField As ItemNamespaceEnum
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property ItemNamespace() As ItemNamespaceEnum
            Get
                Return Me.itemNamespaceField
            End Get
            Set
                Me.itemNamespaceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum ItemNamespaceEnum
        
        '''<remarks/>
        PathBased
        
        '''<remarks/>
        GUIDBased
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer", IsNullable:=false)>  _
    Partial Public Class TrustedUserHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private userNameField As String
        
        Private userTokenField() As Byte
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property UserToken() As Byte()
            Get
                Return Me.userTokenField
            End Get
            Set
                Me.userTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sqlserver/reporting/2010/03/01/ReportServer")>  _
    Public Enum BooleanOperatorEnum
        
        '''<remarks/>
        [And]
        
        '''<remarks/>
        [Or]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateCatalogItemCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCatalogItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCatalogItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Warnings() As Warning()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Warning())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As SetItemDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetItemDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Warning()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Warning())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteItemCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub MoveItemCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub InheritParentSecurityCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListItemHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As ListItemHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListItemHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ItemHistorySnapshot()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ItemHistorySnapshot())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListChildrenCompletedEventHandler(ByVal sender As Object, ByVal e As ListChildrenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListChildrenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListDependentItemsCompletedEventHandler(ByVal sender As Object, ByVal e As ListDependentItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListDependentItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FindItemsCompletedEventHandler(ByVal sender As Object, ByVal e As FindItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListParentsCompletedEventHandler(ByVal sender As Object, ByVal e As ListParentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListParentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateFolderCompletedEventHandler(ByVal sender As Object, ByVal e As CreateFolderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateFolderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As [Property]()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),[Property]())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemReferencesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemReferencesCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemReferencesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemReferencesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ItemReferenceData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ItemReferenceData())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListItemTypesCompletedEventHandler(ByVal sender As Object, ByVal e As ListItemTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListItemTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetSubscriptionPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetSubscriptionPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubscriptionPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubscriptionPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ExtensionSettings() As ExtensionSettings
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),ExtensionSettings)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Description() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Active() As ActiveState
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),ActiveState)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Status() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property EventType() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property MatchData() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Parameters() As ParameterValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),ParameterValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetDataDrivenSubscriptionPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDataDrivenSubscriptionPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataDrivenSubscriptionPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataDrivenSubscriptionPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ExtensionSettings() As ExtensionSettings
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),ExtensionSettings)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DataRetrievalPlan() As DataRetrievalPlan
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),DataRetrievalPlan)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Description() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Active() As ActiveState
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),ActiveState)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Status() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property EventType() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property MatchData() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Parameters() As ParameterValueOrFieldReference()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),ParameterValueOrFieldReference())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteSubscriptionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateSubscriptionCompletedEventHandler(ByVal sender As Object, ByVal e As CreateSubscriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateSubscriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateDataDrivenSubscriptionCompletedEventHandler(ByVal sender As Object, ByVal e As CreateDataDrivenSubscriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDataDrivenSubscriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetExtensionSettingsCompletedEventHandler(ByVal sender As Object, ByVal e As GetExtensionSettingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExtensionSettingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExtensionParameter()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExtensionParameter())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ValidateExtensionSettingsCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateExtensionSettingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateExtensionSettingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExtensionParameter()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExtensionParameter())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListSubscriptionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListSubscriptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListSubscriptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Subscription()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Subscription())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListMySubscriptionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListMySubscriptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListMySubscriptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Subscription()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Subscription())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListSubscriptionsUsingDataSourceCompletedEventHandler(ByVal sender As Object, ByVal e As ListSubscriptionsUsingDataSourceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListSubscriptionsUsingDataSourceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Subscription()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Subscription())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ChangeSubscriptionOwnerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateDataSourceCompletedEventHandler(ByVal sender As Object, ByVal e As CreateDataSourceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateDataSourceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PrepareQueryCompletedEventHandler(ByVal sender As Object, ByVal e As PrepareQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrepareQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DataSetDefinition
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DataSetDefinition)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Changed() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ParameterNames() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub EnableDataSourceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DisableDataSourceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetDataSourceContentsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDataSourceContentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataSourceContentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataSourceContentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DataSourceDefinition
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DataSourceDefinition)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListDatabaseCredentialRetrievalOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListDatabaseCredentialRetrievalOptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListDatabaseCredentialRetrievalOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemDataSourcesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemDataSourcesCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemDataSourcesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemDataSourcesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DataSource()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DataSource())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub TestConnectForDataSourceDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As TestConnectForDataSourceDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestConnectForDataSourceDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ConnectError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub TestConnectForItemDataSourceCompletedEventHandler(ByVal sender As Object, ByVal e As TestConnectForItemDataSourceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestConnectForItemDataSourceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ConnectError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateRoleCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetRolePropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetRolePropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetRolePropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRolePropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Description() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteRoleCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListRolesCompletedEventHandler(ByVal sender As Object, ByVal e As ListRolesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListRolesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Role()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Role())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListTasksCompletedEventHandler(ByVal sender As Object, ByVal e As ListTasksCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListTasksCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Task()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Task())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetPoliciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPoliciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Policy()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Policy())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property InheritParent() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemDataSourcePromptsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemDataSourcePromptsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemDataSourcePromptsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DataSourcePrompt()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DataSourcePrompt())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GenerateModelCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateModelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateModelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Warnings() As Warning()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Warning())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetModelItemPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetModelItemPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetModelItemPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetModelItemPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetModelItemPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetModelItemPoliciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetModelItemPoliciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Policy()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Policy())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property InheritParent() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetUserModelCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserModelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserModelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub InheritModelItemParentSecurityCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetModelDrillthroughReportsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListModelDrillthroughReportsCompletedEventHandler(ByVal sender As Object, ByVal e As ListModelDrillthroughReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListModelDrillthroughReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ModelDrillthroughReport()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ModelDrillthroughReport())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListModelItemChildrenCompletedEventHandler(ByVal sender As Object, ByVal e As ListModelItemChildrenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListModelItemChildrenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ModelItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ModelItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListModelItemTypesCompletedEventHandler(ByVal sender As Object, ByVal e As ListModelItemTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListModelItemTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListModelPerspectivesCompletedEventHandler(ByVal sender As Object, ByVal e As ListModelPerspectivesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListModelPerspectivesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ModelCatalogItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ModelCatalogItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RegenerateModelCompletedEventHandler(ByVal sender As Object, ByVal e As RegenerateModelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegenerateModelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Warning()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Warning())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RemoveAllModelItemPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As CreateScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListSchedulesCompletedEventHandler(ByVal sender As Object, ByVal e As ListSchedulesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListSchedulesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Schedule()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Schedule())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetSchedulePropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSchedulePropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSchedulePropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Schedule
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Schedule)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListScheduleStatesCompletedEventHandler(ByVal sender As Object, ByVal e As ListScheduleStatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListScheduleStatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub PauseScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ResumeScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetSchedulePropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListScheduledItemsCompletedEventHandler(ByVal sender As Object, ByVal e As ListScheduledItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListScheduledItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CatalogItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CatalogItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemParametersCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemParametersCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemParametersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemParametersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ItemParameter()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ItemParameter())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListParameterTypesCompletedEventHandler(ByVal sender As Object, ByVal e As ListParameterTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListParameterTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListParameterStatesCompletedEventHandler(ByVal sender As Object, ByVal e As ListParameterStatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListParameterStatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateReportEditSessionCompletedEventHandler(ByVal sender As Object, ByVal e As CreateReportEditSessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateReportEditSessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Warnings() As Warning()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Warning())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateLinkedItemCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemLinkCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemLinkCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemLinkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemLinkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListExecutionSettingsCompletedEventHandler(ByVal sender As Object, ByVal e As ListExecutionSettingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListExecutionSettingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetExecutionOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetExecutionOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetExecutionOptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExecutionOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Item() As ScheduleDefinitionOrReference
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),ScheduleDefinitionOrReference)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateItemExecutionSnapshotCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetCacheOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetCacheOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetCacheOptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCacheOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Item() As ExpirationDefinition
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),ExpirationDefinition)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FlushCacheCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateItemHistorySnapshotCompletedEventHandler(ByVal sender As Object, ByVal e As CreateItemHistorySnapshotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateItemHistorySnapshotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Warnings() As Warning()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Warning())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteItemHistorySnapshotCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemHistoryLimitCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemHistoryLimitCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemHistoryLimitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemHistoryLimitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property IsSystem() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property SystemLimit() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetItemHistoryOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetItemHistoryOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemHistoryOptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemHistoryOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property KeepExecutionSnapshots() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Item() As ScheduleDefinitionOrReference
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),ScheduleDefinitionOrReference)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetReportServerConfigInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportServerConfigInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportServerConfigInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub IsSSLRequiredCompletedEventHandler(ByVal sender As Object, ByVal e As IsSSLRequiredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsSSLRequiredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetSystemPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetSystemPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As [Property]()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),[Property]())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetSystemPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetSystemPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemPoliciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemPoliciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Policy()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Policy())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListExtensionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListExtensionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListExtensionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Extension()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Extension())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListExtensionTypesCompletedEventHandler(ByVal sender As Object, ByVal e As ListExtensionTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListExtensionTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListEventsCompletedEventHandler(ByVal sender As Object, ByVal e As ListEventsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEventsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As [Event]()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),[Event]())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub FireEventCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListJobsCompletedEventHandler(ByVal sender As Object, ByVal e As ListJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Job()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Job())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListJobTypesCompletedEventHandler(ByVal sender As Object, ByVal e As ListJobTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListJobTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListJobActionsCompletedEventHandler(ByVal sender As Object, ByVal e As ListJobActionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListJobActionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListJobStatesCompletedEventHandler(ByVal sender As Object, ByVal e As ListJobStatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListJobStatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CancelJobCompletedEventHandler(ByVal sender As Object, ByVal e As CancelJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateCacheRefreshPlanCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCacheRefreshPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCacheRefreshPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetCacheRefreshPlanPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetCacheRefreshPlanPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCacheRefreshPlanPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCacheRefreshPlanPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property LastRunStatus() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property State() As CacheRefreshPlanState
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),CacheRefreshPlanState)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property EventType() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property MatchData() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Parameters() As ParameterValue()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),ParameterValue())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteCacheRefreshPlanCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListCacheRefreshPlansCompletedEventHandler(ByVal sender As Object, ByVal e As ListCacheRefreshPlansCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListCacheRefreshPlansCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CacheRefreshPlan()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CacheRefreshPlan())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub LogonUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub LogoffCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetSystemPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetSystemPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSystemPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ListSecurityScopesCompletedEventHandler(ByVal sender As Object, ByVal e As ListSecurityScopesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListSecurityScopesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
